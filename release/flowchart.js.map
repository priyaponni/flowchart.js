{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///flowchart.js","webpack:///webpack/bootstrap 97538c8d25efef615c99","webpack:///./index.js","webpack:///./src/flowchart.helpers.js","webpack:///./src/flowchart.symbol.js","webpack:///./src/flowchart.functions.js","webpack:///./src/flowchart.parse.js","webpack:///./src/flowchart.symbol.condition.js","webpack:///./src/flowchart.chart.js","webpack:///./src/flowchart.defaults.js","webpack:///./src/flowchart.shim.js","webpack:///./src/flowchart.symbol.end.js","webpack:///./src/flowchart.symbol.inputoutput.js","webpack:///./src/flowchart.symbol.operation.js","webpack:///./src/flowchart.symbol.start.js","webpack:///./src/flowchart.symbol.subroutine.js","webpack:///./src/jquery-plugin.js","webpack:///external \"Raphael\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_15__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","parse","FlowChart","window","flowchart","_defaults","options","defaultOptions","merged","attrname","_inherits","ctor","superCtor","Object","super_","prototype","create","constructor","value","enumerable","writable","configurable","TempCtor","defaults","inherits","Symbol","chart","symbol","group","paper","set","connectedTo","symbolType","flowstate","lineStyle","key","next_direction","next","undefined","text","node","setAttribute","getAttr","attr","text-anchor","x","fill","font-size","font","fontF","fontW","roleText","font-family","font-weight","link","target","maxWidth","words","split","tempText","ii","length","word","getBBox","width","substring","push","tmpMargin","stroke","stroke-width","height","insertBefore","y","circle","fill-opacity","opacity","initialize","drawAPI","drawLine","checkLineIntersection","attName","opt1","opt3","opt2","symbols","transform","getCenter","getX","getY","shiftX","setX","shiftY","setY","getTop","getBottom","getLeft","getRight","render","lineLength","rightPoint","isPositioned","self","shift","symb","hasSymbolUnder","len","diff","Math","abs","bottomPoint","renderLines","drawLineTo","origin","indexOf","line","right","bottom","left","symbolX","symbolY","symbolTop","symbolRight","symbolLeft","isOnSameColumn","isOnSameLine","isUnder","isUpper","isLeft","isRight","maxX","lineWith","rightStart","topEnd","bottomStart","diffX","leftStart","leftEnd","rightEnd","l","llen","lines","otherLine","ePath","lPath","iP","lenP","newPath","line1_from_x","line1_from_y","line1_to_x","line1_to_y","lP","lenlP","newLinePath","line2_from_x","line2_from_y","line2_to_x","line2_to_y","res","onLine1","onLine2","newSegment","splice","maxXFromLine","drawPath","location","points","path","pathValues","from","to","toString","arrow-end","centerText","textPath","isHorizontal","firstTo","line1StartX","line1StartY","line1EndX","line1EndY","line2StartX","line2StartY","line2EndX","line2EndY","denominator","b","numerator1","numerator2","result","input","getStyle","s","startIndex","endIndex","getSymbol","getNextPath","flowSymb","trim","start","drawSVG","container","getDisplaySymbol","dispSymbols","Start","diagram","End","Operation","InputOutput","Subroutine","Condition","Error","clean","constructChart","prevDisp","prev","dispSymb","startWith","pathOk","yes","no","then","prevBreak","i0","i0len","line0","replace","substr","currentLine","parts","params","match","entries","entry","sub","join","txtAndState","pop","flowSymbols","lenS","realSymb","direction","condOpt","nextSymb","lineStyleSymbols","curSymb","JSON","textMargin","yes_direction","no_direction","direction_yes","direction_no","max","startX","startY","yes_symbol","no_symbol","bottom_symbol","right_symbol","Raphael","handle","flowChart","nextSymbol","maxHeight","maxY","minX","minY","x2","y2","scale","lineWidth","setSize","setViewBox","paperDom","canvas","parentNode","removeChild","line-width","line-length","text-margin","font-color","line-color","element-color","yes-text","no-text","class","end","condition","inputoutput","operation","subroutine","Array","searchElement","TypeError","t","n","arguments","Number","Infinity","floor","k","lastIndexOf","min","String","rect","innerWrap","jQuery","$","fn","each","$this","html"],"mappings":"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","file":"flowchart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_15__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_15__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(/*! ./src/flowchart.shim */ 8);\r\n\tvar parse = __webpack_require__(/*! ./src/flowchart.parse */ 4);\r\n\t__webpack_require__(/*! ./src/jquery-plugin */ 14);\r\n\t\r\n\tvar FlowChart = {\r\n\t\tparse: parse\r\n\t};\r\n\t\r\n\tif (typeof window !== 'undefined') {\r\n\t\twindow.flowchart = FlowChart;\r\n\t}\r\n\t\r\n\tmodule.exports = FlowChart;\r\n\n\n/***/ }),\n/* 1 */\n/*!**********************************!*\\\n  !*** ./src/flowchart.helpers.js ***!\n  \\**********************************/\n/***/ (function(module, exports) {\n\n\tfunction _defaults(options, defaultOptions) {\r\n\t  if (!options || typeof options === 'function') {\r\n\t    return defaultOptions;\r\n\t  }\r\n\t\r\n\t  var merged = {};\r\n\t  for (var attrname in defaultOptions) {\r\n\t    merged[attrname] = defaultOptions[attrname];\r\n\t  }\r\n\t\r\n\t  for (attrname in options) {\r\n\t    if (options[attrname]) {\r\n\t      if (typeof merged[attrname] === 'object') {\r\n\t        merged[attrname] = _defaults(merged[attrname], options[attrname]);\r\n\t      } else {\r\n\t        merged[attrname] = options[attrname];\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  return merged;\r\n\t}\r\n\t\r\n\tfunction _inherits(ctor, superCtor) {\r\n\t  if (typeof(Object.create) === 'function') {\r\n\t    // implementation from standard node.js 'util' module\r\n\t    ctor.super_ = superCtor;\r\n\t    ctor.prototype = Object.create(superCtor.prototype, {\r\n\t      constructor: {\r\n\t        value: ctor,\r\n\t        enumerable: false,\r\n\t        writable: true,\r\n\t        configurable: true\r\n\t      }\r\n\t    });\r\n\t  } else {\r\n\t    // old school shim for old browsers\r\n\t    ctor.super_ = superCtor;\r\n\t    var TempCtor = function () {};\r\n\t    TempCtor.prototype = superCtor.prototype;\r\n\t    ctor.prototype = new TempCtor();\r\n\t    ctor.prototype.constructor = ctor;\r\n\t  }\r\n\t}\r\n\t\r\n\t// move dependent functions to a container so that\r\n\t// they can be overriden easier in no jquery environment (node.js)\r\n\tmodule.exports = {\r\n\t  defaults: _defaults,\r\n\t  inherits: _inherits\r\n\t};\r\n\n\n/***/ }),\n/* 2 */\n/*!*********************************!*\\\n  !*** ./src/flowchart.symbol.js ***!\n  \\*********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\r\n\tvar drawLine = drawAPI.drawLine;\r\n\tvar checkLineIntersection = drawAPI.checkLineIntersection;\r\n\t\r\n\tfunction Symbol(chart, options, symbol) {\r\n\t  this.chart = chart;\r\n\t  this.group = this.chart.paper.set();\r\n\t  this.symbol = symbol;\r\n\t  this.connectedTo = [];\r\n\t  this.symbolType = options.symbolType;\r\n\t  this.flowstate = (options.flowstate || 'future');\r\n\t  this.lineStyle = (options.lineStyle || {});\r\n\t  this.key = (options.key || '');\r\n\t\r\n\t  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\r\n\t\r\n\t  this.text = this.chart.paper.text(0, 0, options.text);\r\n\t  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\r\n\t  if (options.key) { this.text.node.id = options.key + 't'; }\r\n\t  this.text.node.setAttribute('class', this.getAttr('class') + 't');\r\n\t\r\n\t  this.text.attr({\r\n\t    'text-anchor': 'start',\r\n\t    'x'          : this.getAttr('text-margin'),\r\n\t    'fill'       : this.getAttr('font-color'),\r\n\t    'font-size'  : this.getAttr('font-size')\r\n\t  });\r\n\t\r\n\t  var font  = this.getAttr('font');\r\n\t  var fontF = this.getAttr('font-family');\r\n\t  var fontW = this.getAttr('font-weight');\r\n\t  this.roleText = this.getAttr('role');\r\n\t\r\n\t  if (font) this.text.attr({ 'font': font });\r\n\t  if (fontF) this.text.attr({ 'font-family': fontF });\r\n\t  if (fontW) this.text.attr({ 'font-weight': fontW });\r\n\t\r\n\t  if (options.link) { this.text.attr('href', options.link); }\r\n\t  if (options.target) { this.text.attr('target', options.target); }\r\n\t\r\n\t  var maxWidth = this.getAttr('maxWidth');\r\n\t  if (maxWidth) {\r\n\t    // using this approach: http://stackoverflow.com/a/3153457/22466\r\n\t    var words = options.text.split(' ');\r\n\t    var tempText = \"\";\r\n\t    for (var i=0, ii=words.length; i<ii; i++) {\r\n\t      var word = words[i];\r\n\t      this.text.attr(\"text\", tempText + \" \" + word);\r\n\t      if (this.text.getBBox().width > maxWidth) {\r\n\t        tempText += \"\\n\" + word;\r\n\t      } else {\r\n\t        tempText += \" \" + word;\r\n\t      }\r\n\t    }\r\n\t    this.text.attr(\"text\", tempText.substring(1));\r\n\t  }\r\n\t\r\n\t  this.group.push(this.text);\r\n\t  \r\n\t\r\n\t  if (symbol) {\r\n\t    var tmpMargin = this.getAttr('text-margin');\r\n\t\r\n\t    symbol.attr({\r\n\t      'fill' : this.getAttr('fill'),\r\n\t      'stroke' : this.getAttr('element-color'),\r\n\t      'stroke-width' : this.getAttr('line-width'),\r\n\t      'width' : this.text.getBBox().width + 3 * tmpMargin,\r\n\t      'height' : this.text.getBBox().height + 3 * tmpMargin\r\n\t    });\r\n\t\r\n\t    symbol.node.setAttribute('class', this.getAttr('class'));\r\n\t\r\n\t    if (options.link) { symbol.attr('href', options.link); }\r\n\t    if (options.target) { symbol.attr('target', options.target); }\r\n\t    if (options.key) { symbol.node.id = options.key; }\r\n\t\r\n\t    this.group.push(symbol);\r\n\t    symbol.insertBefore(this.text);\r\n\t    \r\n\t    \r\n\t    this.text.attr({\r\n\t      'y': symbol.getBBox().height/2 + 3\r\n\t    });\r\n\t\r\n\t    if( this.roleText ){\r\n\t      this.circle = this.chart.paper.circle(symbol.getBBox().width - 20, 5, 10)\r\n\t        .attr({stroke: this.roleText.stroke, fill: this.roleText.fill,  \"fill-opacity\": this.roleText.opacity || 1});\r\n\t      this.circle.insertBefore(this.text);\r\n\t      symbol.insertBefore(this.circle);\r\n\t      this.group.push(this.circle);\r\n\t    }\r\n\t\r\n\t    this.initialize();\r\n\t  }\r\n\t\r\n\t}\r\n\t\r\n\t/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\r\n\tSymbol.prototype.getAttr = function(attName) {\r\n\t  if (!this.chart) {\r\n\t    return undefined;\r\n\t  }\r\n\t  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\r\n\t  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\r\n\t  var opt1;\r\n\t  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\r\n\t    opt1 = this.chart.options.flowstate[this.flowstate][attName];\r\n\t  }\r\n\t  return (opt1 || opt2 || opt3);\r\n\t};\r\n\t\r\n\tSymbol.prototype.initialize = function() {\r\n\t  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\r\n\t\r\n\t  this.width = this.group.getBBox().width;\r\n\t  this.height = this.group.getBBox().height;\r\n\t};\r\n\t\r\n\tSymbol.prototype.getCenter = function() {\r\n\t  var x = 0;\r\n\t  if( this.roleText )\r\n\t    x = 5;\r\n\t  return {x: this.getX() + this.width/2,\r\n\t          y: (this.getY() + this.height/2 + 5)};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getX = function() {\r\n\t  return this.group.getBBox().x;\r\n\t};\r\n\t\r\n\tSymbol.prototype.getY = function() {\r\n\t  var x = 0;\r\n\t  if(this.roleText)\r\n\t    x = 5;\r\n\t  return this.group.getBBox().y + x;\r\n\t};\r\n\t\r\n\tSymbol.prototype.shiftX = function(x) {\r\n\t  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\r\n\t};\r\n\t\r\n\tSymbol.prototype.setX = function(x) {\r\n\t  this.group.transform('t' + x + ',' + this.getY());\r\n\t};\r\n\t\r\n\tSymbol.prototype.shiftY = function(y) {\r\n\t  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\r\n\t};\r\n\t\r\n\tSymbol.prototype.setY = function(y) {\r\n\t  this.group.transform('t' + this.getX() + ',' + y);\r\n\t};\r\n\t\r\n\tSymbol.prototype.getTop = function() {\r\n\t  var y = this.getY();\r\n\t  var x = this.getX() + this.width/2;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getBottom = function() {\r\n\t  var y = this.getY() + this.height;\r\n\t  var x = this.getX() + this.width/2;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getLeft = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX();\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.getRight = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX() + this.group.getBBox().width;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tSymbol.prototype.render = function() {\r\n\t  if (this.next) {\r\n\t\r\n\t    var lineLength = this.getAttr('line-length');\r\n\t\r\n\t    if (this.next_direction === 'right') {\r\n\t\r\n\t      var rightPoint = this.getRight();\r\n\t\r\n\t      if (!this.next.isPositioned) {\r\n\t\r\n\t        this.next.setY(rightPoint.y - this.next.height/2);\r\n\t        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\t\r\n\t        var self = this;\r\n\t        (function shift() {\r\n\t          var hasSymbolUnder = false;\r\n\t          var symb;\r\n\t          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n\t            symb = self.chart.symbols[i];\r\n\t\r\n\t            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\r\n\t            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\r\n\t              hasSymbolUnder = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t\r\n\t          if (hasSymbolUnder) {\r\n\t            self.next.setX(symb.getX() + symb.width + lineLength);\r\n\t            shift();\r\n\t          }\r\n\t        })();\r\n\t\r\n\t        this.next.isPositioned = true;\r\n\t\r\n\t        this.next.render();\r\n\t      }\r\n\t    } else {\r\n\t      var bottomPoint = this.getBottom();\r\n\t\r\n\t      if (!this.next.isPositioned) {\r\n\t        this.next.shiftY(this.getY() + this.height + lineLength);\r\n\t        this.next.setX(bottomPoint.x - this.next.width/2);\r\n\t        this.next.isPositioned = true;\r\n\t\r\n\t        this.next.render();\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\tSymbol.prototype.renderLines = function() {\r\n\t  if (this.next) {\r\n\t    if (this.next_direction) {\r\n\t      this.drawLineTo(this.next, '', this.next_direction);\r\n\t    } else {\r\n\t      this.drawLineTo(this.next);\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\tSymbol.prototype.drawLineTo = function(symbol, text, origin) {\r\n\t  if (this.connectedTo.indexOf(symbol) < 0) {\r\n\t    this.connectedTo.push(symbol);\r\n\t  }\r\n\t\r\n\t  var x = this.getCenter().x,\r\n\t      y = this.getCenter().y,\r\n\t      right = this.getRight(),\r\n\t      bottom = this.getBottom(),\r\n\t      left = this.getLeft();\r\n\t\r\n\t  var symbolX = symbol.getCenter().x,\r\n\t      symbolY = symbol.getCenter().y,\r\n\t      symbolTop = symbol.getTop(),\r\n\t      symbolRight = symbol.getRight(),\r\n\t      symbolLeft = symbol.getLeft();\r\n\t\r\n\t  var isOnSameColumn = x === symbolX,\r\n\t      isOnSameLine = y === symbolY,\r\n\t      isUnder = y < symbolY,\r\n\t      isUpper = y > symbolY || this === symbol,\r\n\t      isLeft = x > symbolX,\r\n\t      isRight = x < symbolX;\r\n\t\r\n\t  var maxX = 0,\r\n\t      line,\r\n\t      lineLength = this.getAttr('line-length'),\r\n\t      lineWith = this.getAttr('line-width');\r\n\t\r\n\t  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\r\n\t    line = drawLine(this.chart, bottom, symbolTop, text);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x;\r\n\t  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\r\n\t    line = drawLine(this.chart, right, symbolLeft, text);\r\n\t    this.rightStart = true;\r\n\t    symbol.leftEnd = true;\r\n\t    maxX = symbolLeft.x;\r\n\t  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\r\n\t    line = drawLine(this.chart, left, symbolRight, text);\r\n\t    this.leftStart = true;\r\n\t    symbol.rightEnd = true;\r\n\t    maxX = symbolRight.x;\r\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: right.x + lineLength/2, y: right.y},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: right.x + lineLength/2, y: right.y},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((!origin || origin === 'bottom') && isLeft) {\r\n\t    if (this.leftEnd && isUpper) {\r\n\t      line = drawLine(this.chart, bottom, [\r\n\t        {x: bottom.x, y: bottom.y + lineLength/2},\r\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\r\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\r\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t        {x: symbolTop.x, y: symbolTop.y}\r\n\t      ], text);\r\n\t    } else {\r\n\t      line = drawLine(this.chart, bottom, [\r\n\t        {x: bottom.x, y: symbolTop.y - lineLength/2},\r\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t        {x: symbolTop.x, y: symbolTop.y}\r\n\t      ], text);\r\n\t    }\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n\t  } else if ((!origin || origin === 'bottom') && isRight) {\r\n\t    line = drawLine(this.chart, bottom, [\r\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\r\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\r\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n\t  } else if ((origin && origin === 'right') && isLeft) {\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: right.x + lineLength/2, y: right.y},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((origin && origin === 'right') && isRight) {\r\n\t    line = drawLine(this.chart, right, [\r\n\t      {x: symbolTop.x, y: right.y},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.rightStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = right.x + lineLength/2;\r\n\t  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\r\n\t    line = drawLine(this.chart, bottom, [\r\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\r\n\t      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\r\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.bottomStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = bottom.x + lineLength/2;\r\n\t  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\r\n\t    var diffX = left.x - lineLength/2;\r\n\t    if (symbolLeft.x < left.x) {\r\n\t      diffX = symbolLeft.x - lineLength/2;\r\n\t    }\r\n\t    line = drawLine(this.chart, left, [\r\n\t      {x: diffX, y: left.y},\r\n\t      {x: diffX, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.leftStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = left.x;\r\n\t  } else if ((origin === 'left')) {\r\n\t    line = drawLine(this.chart, left, [\r\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: left.y},\r\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n\t      {x: symbolTop.x, y: symbolTop.y}\r\n\t    ], text);\r\n\t    this.leftStart = true;\r\n\t    symbol.topEnd = true;\r\n\t    maxX = left.x;\r\n\t  }\r\n\t\r\n\t  //update line style\r\n\t  if (this.lineStyle[symbol.key] && line){\r\n\t      line.attr( this.lineStyle[symbol.key]);\r\n\t  }\r\n\t\r\n\t  if (line) {\r\n\t    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\r\n\t      var otherLine = this.chart.lines[l];\r\n\t      var len;\r\n\t\r\n\t      var ePath = otherLine.attr('path'),\r\n\t          lPath = line.attr('path');\r\n\t\r\n\t      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\r\n\t        var newPath = [];\r\n\t        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\r\n\t        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\r\n\t\r\n\t        var line1_from_x = newPath[0][1];\r\n\t        var line1_from_y = newPath[0][2];\r\n\t        var line1_to_x = newPath[1][1];\r\n\t        var line1_to_y = newPath[1][2];\r\n\t\r\n\t        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\r\n\t          var newLinePath = [];\r\n\t          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\r\n\t          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\r\n\t\r\n\t          var line2_from_x = newLinePath[0][1];\r\n\t          var line2_from_y = newLinePath[0][2];\r\n\t          var line2_to_x = newLinePath[1][1];\r\n\t          var line2_to_y = newLinePath[1][2];\r\n\t\r\n\t          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\r\n\t          if (res.onLine1 && res.onLine2) {\r\n\t\r\n\t            var newSegment;\r\n\t            if (line2_from_y === line2_to_y) {\r\n\t              if (line2_from_x > line2_to_x) {\r\n\t                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              } else {\r\n\t                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              }\r\n\t            } else {\r\n\t              if (line2_from_y > line2_to_y) {\r\n\t                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              } else {\r\n\t                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\r\n\t                lPath.splice(lP + 1, 0, newSegment);\r\n\t                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\r\n\t                lPath.splice(lP + 2, 0, newSegment);\r\n\t                line.attr('path', lPath);\r\n\t              }\r\n\t            }\r\n\t\r\n\t            lP += 2;\r\n\t            len += 2;\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t    this.chart.lines.push(line);\r\n\t  }\r\n\t\r\n\t  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\r\n\t    this.chart.maxXFromLine = maxX;\r\n\t  }\r\n\t};\r\n\t\r\n\tmodule.exports = Symbol;\r\n\n\n/***/ }),\n/* 3 */\n/*!************************************!*\\\n  !*** ./src/flowchart.functions.js ***!\n  \\************************************/\n/***/ (function(module, exports) {\n\n\tfunction drawPath(chart, location, points) {\r\n\t  var i, len;\r\n\t  var path = 'M{0},{1}';\r\n\t  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\r\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n\t  }\r\n\t  var pathValues = [location.x, location.y];\r\n\t  for (i = 0, len = points.length; i < len; i++) {\r\n\t    pathValues.push(points[i].x);\r\n\t    pathValues.push(points[i].y);\r\n\t  }\r\n\t  var symbol = chart.paper.path(path, pathValues);\r\n\t  symbol.attr('stroke', chart.options['element-color']);\r\n\t  symbol.attr('stroke-width', chart.options['line-width']);\r\n\t\r\n\t  var font = chart.options.font;\r\n\t  var fontF = chart.options['font-family'];\r\n\t  var fontW = chart.options['font-weight'];\r\n\t\r\n\t  if (font) symbol.attr({ 'font': font });\r\n\t  if (fontF) symbol.attr({ 'font-family': fontF });\r\n\t  if (fontW) symbol.attr({ 'font-weight': fontW });\r\n\t\r\n\t  return symbol;\r\n\t}\r\n\t\r\n\tfunction drawLine(chart, from, to, text) {\r\n\t  var i, len;\r\n\t\r\n\t  if (Object.prototype.toString.call(to) !== '[object Array]') {\r\n\t    to = [to];\r\n\t  }\r\n\t\r\n\t  var path = 'M{0},{1}';\r\n\t  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\r\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n\t  }\r\n\t  var pathValues = [from.x, from.y];\r\n\t  for (i = 0, len = to.length; i < len; i++) {\r\n\t    pathValues.push(to[i].x);\r\n\t    pathValues.push(to[i].y);\r\n\t  }\r\n\t\r\n\t  var line = chart.paper.path(path, pathValues);\r\n\t  line.attr({\r\n\t    stroke: chart.options['line-color'],\r\n\t    'stroke-width': chart.options['line-width'],\r\n\t    'arrow-end': chart.options['arrow-end']\r\n\t  });\r\n\t\r\n\t  var font = chart.options.font;\r\n\t  var fontF = chart.options['font-family'];\r\n\t  var fontW = chart.options['font-weight'];\r\n\t\r\n\t  if (font) line.attr({ 'font': font });\r\n\t  if (fontF) line.attr({ 'font-family': fontF });\r\n\t  if (fontW) line.attr({ 'font-weight': fontW });\r\n\t\r\n\t  if (text) {\r\n\t\r\n\t    var centerText = false;\r\n\t\r\n\t    var textPath = chart.paper.text(0, 0, text);\r\n\t\r\n\t    var isHorizontal = false;\r\n\t    var firstTo = to[0];\r\n\t\r\n\t    if (from.y === firstTo.y) {\r\n\t      isHorizontal = true;\r\n\t    }\r\n\t\r\n\t    var x = 0,\r\n\t        y = 0;\r\n\t\r\n\t    if (centerText) {\r\n\t      if (from.x > firstTo.x) {\r\n\t        x = from.x - (from.x - firstTo.x)/2;\r\n\t      } else {\r\n\t        x = firstTo.x - (firstTo.x - from.x)/2;\r\n\t      }\r\n\t\r\n\t      if (from.y > firstTo.y) {\r\n\t        y = from.y - (from.y - firstTo.y)/2;\r\n\t      } else {\r\n\t        y = firstTo.y - (firstTo.y - from.y)/2;\r\n\t      }\r\n\t\r\n\t      if (isHorizontal) {\r\n\t        x -= textPath.getBBox().width/2;\r\n\t        y -= chart.options['text-margin'];\r\n\t      } else {\r\n\t        x += chart.options['text-margin'];\r\n\t        y -= textPath.getBBox().height/2;\r\n\t      }\r\n\t    } else {\r\n\t      x = from.x;\r\n\t      y = from.y;\r\n\t\r\n\t      if (isHorizontal) {\r\n\t        x += chart.options['text-margin']/2;\r\n\t        y -= chart.options['text-margin'];\r\n\t      } else {\r\n\t        x += chart.options['text-margin']/2;\r\n\t        y += chart.options['text-margin'];\r\n\t      }\r\n\t    }\r\n\t\r\n\t    textPath.attr({\r\n\t      'text-anchor': 'start',\r\n\t      'font-size': chart.options['font-size'],\r\n\t      'fill': chart.options['font-color'],\r\n\t      x: x,\r\n\t      y: y\r\n\t    });\r\n\t\r\n\t    if (font) textPath.attr({ 'font': font });\r\n\t    if (fontF) textPath.attr({ 'font-family': fontF });\r\n\t    if (fontW) textPath.attr({ 'font-weight': fontW });\r\n\t  }\r\n\t\r\n\t  return line;\r\n\t}\r\n\t\r\n\tfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\r\n\t  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\r\n\t  var denominator, a, b, numerator1, numerator2, result = {\r\n\t    x: null,\r\n\t    y: null,\r\n\t    onLine1: false,\r\n\t    onLine2: false\r\n\t  };\r\n\t  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\r\n\t  if (denominator === 0) {\r\n\t    return result;\r\n\t  }\r\n\t  a = line1StartY - line2StartY;\r\n\t  b = line1StartX - line2StartX;\r\n\t  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\r\n\t  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\r\n\t  a = numerator1 / denominator;\r\n\t  b = numerator2 / denominator;\r\n\t\r\n\t  // if we cast these lines infinitely in both directions, they intersect here:\r\n\t  result.x = line1StartX + (a * (line1EndX - line1StartX));\r\n\t  result.y = line1StartY + (a * (line1EndY - line1StartY));\r\n\t  /*\r\n\t  // it is worth noting that this should be the same as:\r\n\t  x = line2StartX + (b * (line2EndX - line2StartX));\r\n\t  y = line2StartX + (b * (line2EndY - line2StartY));\r\n\t  */\r\n\t  // if line1 is a segment and line2 is infinite, they intersect if:\r\n\t  if (a > 0 && a < 1) {\r\n\t    result.onLine1 = true;\r\n\t  }\r\n\t  // if line2 is a segment and line1 is infinite, they intersect if:\r\n\t  if (b > 0 && b < 1) {\r\n\t    result.onLine2 = true;\r\n\t  }\r\n\t  // if line1 and line2 are segments, they intersect if both of the above are true\r\n\t  return result;\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t\tdrawPath: drawPath,\r\n\t\tdrawLine: drawLine,\r\n\t\tcheckLineIntersection: checkLineIntersection\r\n\t};\r\n\n\n/***/ }),\n/* 4 */\n/*!********************************!*\\\n  !*** ./src/flowchart.parse.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar FlowChart = __webpack_require__(/*! ./flowchart.chart */ 6);\r\n\tvar Start = __webpack_require__(/*! ./flowchart.symbol.start */ 12);\r\n\tvar End = __webpack_require__(/*! ./flowchart.symbol.end */ 9);\r\n\tvar Operation = __webpack_require__(/*! ./flowchart.symbol.operation */ 11);\r\n\tvar InputOutput = __webpack_require__(/*! ./flowchart.symbol.inputoutput */ 10);\r\n\tvar Subroutine = __webpack_require__(/*! ./flowchart.symbol.subroutine */ 13);\r\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\r\n\t\r\n\tfunction parse(input) {\r\n\t  input = input || '';\r\n\t  input = input.trim();\r\n\t\r\n\t  var chart = {\r\n\t    symbols: {},\r\n\t    start: null,\r\n\t    drawSVG: function(container, options) {\r\n\t      var self = this;\r\n\t\r\n\t      if (this.diagram) {\r\n\t        this.diagram.clean();\r\n\t      }\r\n\t\r\n\t      var diagram = new FlowChart(container, options);\r\n\t      this.diagram = diagram;\r\n\t      var dispSymbols = {};\r\n\t\r\n\t      function getDisplaySymbol(s) {\r\n\t        if (dispSymbols[s.key]) {\r\n\t          return dispSymbols[s.key];\r\n\t        }\r\n\t\r\n\t        switch (s.symbolType) {\r\n\t          case 'start':\r\n\t            dispSymbols[s.key] = new Start(diagram, s);\r\n\t            break;\r\n\t          case 'end':\r\n\t            dispSymbols[s.key] = new End(diagram, s);\r\n\t            break;\r\n\t          case 'operation':\r\n\t            dispSymbols[s.key] = new Operation(diagram, s);\r\n\t            break;\r\n\t          case 'inputoutput':\r\n\t            dispSymbols[s.key] = new InputOutput(diagram, s);\r\n\t            break;\r\n\t          case 'subroutine':\r\n\t            dispSymbols[s.key] = new Subroutine(diagram, s);\r\n\t            break;\r\n\t          case 'condition':\r\n\t            dispSymbols[s.key] = new Condition(diagram, s);\r\n\t            break;\r\n\t          default:\r\n\t            return new Error('Wrong symbol type!');\r\n\t        }\r\n\t\r\n\t        return dispSymbols[s.key];\r\n\t      }\r\n\t\r\n\t      (function constructChart(s, prevDisp, prev) {\r\n\t        var dispSymb = getDisplaySymbol(s);\r\n\t\r\n\t        if (self.start === s) {\r\n\t          diagram.startWith(dispSymb);\r\n\t        } else if (prevDisp && prev && !prevDisp.pathOk) {\r\n\t          if (prevDisp instanceof(Condition)) {\r\n\t            if (prev.yes === s) {\r\n\t              prevDisp.yes(dispSymb);\r\n\t            }\r\n\t            if (prev.no === s) {\r\n\t              prevDisp.no(dispSymb);\r\n\t            }\r\n\t          } else {\r\n\t            prevDisp.then(dispSymb);\r\n\t          }\r\n\t        }\r\n\t\r\n\t        if (dispSymb.pathOk) {\r\n\t          return dispSymb;\r\n\t        }\r\n\t\r\n\t        if (dispSymb instanceof(Condition)) {\r\n\t          if (s.yes) {\r\n\t            constructChart(s.yes, dispSymb, s);\r\n\t          }\r\n\t          if (s.no) {\r\n\t            constructChart(s.no, dispSymb, s);\r\n\t          }\r\n\t        } else if (s.next) {\r\n\t          constructChart(s.next, dispSymb, s);\r\n\t        }\r\n\t\r\n\t        return dispSymb;\r\n\t      })(this.start);\r\n\t\r\n\t      diagram.render();\r\n\t    },\r\n\t    clean: function() {\r\n\t      this.diagram.clean();\r\n\t    }\r\n\t  };\r\n\t\r\n\t  var lines = [];\r\n\t  var prevBreak = 0;\r\n\t  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\r\n\t    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\r\n\t      var line0 = input.substring(prevBreak, i0);\r\n\t      prevBreak = i0 + 1;\r\n\t      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\r\n\t    }\r\n\t  }\r\n\t\r\n\t  if(prevBreak < input.length) {\r\n\t    lines.push(input.substr(prevBreak));\r\n\t  }\r\n\t\r\n\t  for (var l = 1, len = lines.length; l < len;) {\r\n\t    var currentLine = lines[l];\r\n\t\r\n\t    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\r\n\t      lines[l - 1] += '\\n' + currentLine;\r\n\t      lines.splice(l, 1);\r\n\t      len--;\r\n\t    } else {\r\n\t      l++;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  function getStyle(s){\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      return s.substring(startIndex,endIndex);\r\n\t    }\r\n\t    return '{}';\r\n\t  }\r\n\t\r\n\t  function getSymbol(s) {\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      return chart.symbols[s.substring(0, startIndex - 1)];\r\n\t    }\r\n\t    return chart.symbols[s];\r\n\t  }\r\n\t\r\n\t  function getNextPath(s) {\r\n\t    var next = 'next';\r\n\t    var startIndex = s.indexOf('(') + 1;\r\n\t    var endIndex = s.indexOf(')');\r\n\t    if (startIndex >= 0 && endIndex >= 0) {\r\n\t      next = flowSymb.substring(startIndex, endIndex);\r\n\t      if (next.indexOf(',') < 0) {\r\n\t        if (next !== 'yes' && next !== 'no') {\r\n\t          next = 'next, ' + next;\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t    return next;\r\n\t  }\r\n\t\r\n\t  while (lines.length > 0) {\r\n\t    var line = lines.splice(0, 1)[0].trim();\r\n\t\r\n\t    if (line.indexOf('=>') >= 0) {\r\n\t      // definition\r\n\t      var parts = line.split('=>');\r\n\t      var symbol = {\r\n\t        key: parts[0].replace(/\\(.*\\)/, ''),\r\n\t        symbolType: parts[1],\r\n\t        text: null,\r\n\t        link: null,\r\n\t        target: null,\r\n\t        flowstate: null,\r\n\t        lineStyle: {},\r\n\t        params: {}\r\n\t      };\r\n\t\r\n\t      //parse parameters\r\n\t      var params = parts[0].match(/\\((.*)\\)/);\r\n\t      if (params && params.length > 1){\r\n\t        var entries = params[1].split(',');\r\n\t        for(var i = 0; i < entries.length; i++) {\r\n\t          var entry = entries[0].split('=');\r\n\t          if (entry.length == 2){\r\n\t            symbol.params[entry[0]] = entry[1];\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t\r\n\t      var sub;\r\n\t\r\n\t      if (symbol.symbolType.indexOf(': ') >= 0) {\r\n\t        sub = symbol.symbolType.split(': ');\r\n\t        symbol.symbolType = sub.shift();\r\n\t        symbol.text = sub.join(': ');\r\n\t      }\r\n\t\r\n\t      if (symbol.text && symbol.text.indexOf(':>') >= 0) {\r\n\t        sub = symbol.text.split(':>');\r\n\t        symbol.text = sub.shift();\r\n\t        symbol.link = sub.join(':>');\r\n\t      } else if (symbol.symbolType.indexOf(':>') >= 0) {\r\n\t        sub = symbol.symbolType.split(':>');\r\n\t        symbol.symbolType = sub.shift();\r\n\t        symbol.link = sub.join(':>');\r\n\t      }\r\n\t\r\n\t      if (symbol.symbolType.indexOf('\\n') >= 0) {\r\n\t        symbol.symbolType = symbol.symbolType.split('\\n')[0];\r\n\t      }\r\n\t\r\n\t      /* adding support for links */\r\n\t      if (symbol.link) {\r\n\t        var startIndex = symbol.link.indexOf('[') + 1;\r\n\t        var endIndex = symbol.link.indexOf(']');\r\n\t        if (startIndex >= 0 && endIndex >= 0) {\r\n\t          symbol.target = symbol.link.substring(startIndex, endIndex);\r\n\t          symbol.link = symbol.link.substring(0, startIndex - 1);\r\n\t        }\r\n\t      }\r\n\t      /* end of link support */\r\n\t\r\n\t      /* adding support for flowstates */\r\n\t      if (symbol.text) {\r\n\t        if (symbol.text.indexOf('|') >= 0) {\r\n\t          var txtAndState = symbol.text.split('|');\r\n\t          symbol.flowstate = txtAndState.pop().trim();\r\n\t          symbol.text = txtAndState.join('|');\r\n\t        }\r\n\t      }\r\n\t      /* end of flowstate support */\r\n\t\r\n\t      chart.symbols[symbol.key] = symbol;\r\n\t\r\n\t    } else if (line.indexOf('->') >= 0) {\r\n\t      // flow\r\n\t      var flowSymbols = line.split('->');\r\n\t      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\r\n\t        var flowSymb = flowSymbols[i];\r\n\t\r\n\t        var realSymb = getSymbol(flowSymb);\r\n\t        var next = getNextPath(flowSymb);\r\n\t\r\n\t        var direction = null;\r\n\t        if (next.indexOf(',') >= 0) {\r\n\t          var condOpt = next.split(',');\r\n\t          next = condOpt[0];\r\n\t          direction = condOpt[1].trim();\r\n\t        }\r\n\t\r\n\t        if (!chart.start) {\r\n\t          chart.start = realSymb;\r\n\t        }\r\n\t\r\n\t        if (i + 1 < lenS) {\r\n\t          var nextSymb = flowSymbols[i + 1];\r\n\t          realSymb[next] = getSymbol(nextSymb);\r\n\t          realSymb['direction_' + next] = direction;\r\n\t          direction = null;\r\n\t        }\r\n\t      }\r\n\t    } else if (line.indexOf('@>') >= 0) {\r\n\t\r\n\t      // line style\r\n\t      var lineStyleSymbols = line.split('@>');\r\n\t      for (var i = 0, lenS = lineStyleSymbols.length; i < lenS; i++) {\r\n\t\r\n\t        if ((i+1) != lenS){\r\n\t          var curSymb = getSymbol(lineStyleSymbols[i]);\r\n\t          var nextSymb = getSymbol(lineStyleSymbols[i+1])\r\n\t\r\n\t          curSymb['lineStyle'][nextSymb.key] = JSON.parse(getStyle(lineStyleSymbols[i+1]));\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t  }\r\n\t  return chart;\r\n\t}\r\n\t\r\n\tmodule.exports = parse;\r\n\n\n/***/ }),\n/* 5 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.condition.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\r\n\tvar drawPath = drawAPI.drawPath;\r\n\t\r\n\tfunction Condition(chart, options) {\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options);\r\n\t  this.textMargin = this.getAttr('text-margin');\r\n\t  this.yes_direction = 'bottom';\r\n\t  this.no_direction = 'right';\r\n\t  this.params = options.params;\r\n\t  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\r\n\t    if (options.direction_yes === 'right') {\r\n\t      this.no_direction = 'bottom';\r\n\t      this.yes_direction = 'right';\r\n\t    } else {\r\n\t      this.no_direction = 'right';\r\n\t      this.yes_direction = 'bottom';\r\n\t    }\r\n\t  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\r\n\t    if (options.direction_no === 'right') {\r\n\t      this.yes_direction = 'bottom';\r\n\t      this.no_direction = 'right';\r\n\t    } else {\r\n\t      this.yes_direction = 'right';\r\n\t      this.no_direction = 'bottom';\r\n\t    }\r\n\t  } else {\r\n\t    this.yes_direction = 'bottom';\r\n\t    this.no_direction = 'right';\r\n\t  }\r\n\t\r\n\t  this.yes_direction = this.yes_direction || 'bottom';\r\n\t  this.no_direction = this.no_direction || 'right';\r\n\t\r\n\t  this.text.attr({\r\n\t    x: this.textMargin * 2\r\n\t  });\r\n\t\r\n\t  var width = this.text.getBBox().width + 3 * this.textMargin;\r\n\t  width += width/2;\r\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\r\n\t  height += height/2;\r\n\t  height = Math.max(width * 0.5, height);\r\n\t  var startX = width/4;\r\n\t  var startY = height/4;\r\n\t\r\n\t  this.text.attr({\r\n\t    x: startX + this.textMargin/2\r\n\t  });\r\n\t\r\n\t  var start = {x: startX, y: startY};\r\n\t  var points = [\r\n\t    {x: startX - width/4, y: startY + height/4},\r\n\t    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\r\n\t    {x: startX - width/4 + width, y: startY + height/4},\r\n\t    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\r\n\t    {x: startX - width/4, y: startY + height/4}\r\n\t  ];\r\n\t\r\n\t  var symbol = drawPath(chart, start, points);\r\n\t\r\n\t  symbol.attr({\r\n\t    stroke: this.getAttr('element-color'),\r\n\t    'stroke-width': this.getAttr('line-width'),\r\n\t    fill: this.getAttr('fill')\r\n\t  });\r\n\t  if (options.link) { symbol.attr('href', options.link); }\r\n\t  if (options.target) { symbol.attr('target', options.target); }\r\n\t  if (options.key) { symbol.node.id = options.key; }\r\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\t\r\n\t  this.text.attr({\r\n\t    y: symbol.getBBox().height/2\r\n\t  });\r\n\t\r\n\t  this.group.push(symbol);\r\n\t  symbol.insertBefore(this.text);\r\n\t\r\n\t  this.initialize();\r\n\t}\r\n\tinherits(Condition, Symbol);\r\n\t\r\n\tCondition.prototype.render = function() {\r\n\t\r\n\t  if (this.yes_direction) {\r\n\t    this[this.yes_direction + '_symbol'] = this.yes_symbol;\r\n\t  }\r\n\t\r\n\t  if (this.no_direction) {\r\n\t    this[this.no_direction + '_symbol'] = this.no_symbol;\r\n\t  }\r\n\t\r\n\t  var lineLength = this.getAttr('line-length');\r\n\t\r\n\t  if (this.bottom_symbol) {\r\n\t    var bottomPoint = this.getBottom();\r\n\t\r\n\t    if (!this.bottom_symbol.isPositioned) {\r\n\t      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\r\n\t      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\r\n\t      this.bottom_symbol.isPositioned = true;\r\n\t\r\n\t      this.bottom_symbol.render();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  if (this.right_symbol) {\r\n\t    var rightPoint = this.getRight();\r\n\t\r\n\t    if (!this.right_symbol.isPositioned) {\r\n\t\r\n\t      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\r\n\t      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\t\r\n\t      var self = this;\r\n\t      (function shift() {\r\n\t        var hasSymbolUnder = false;\r\n\t        var symb;\r\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n\t          symb = self.chart.symbols[i];\r\n\t\r\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \r\n\t            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\r\n\t            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\r\n\t              hasSymbolUnder = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t        }\r\n\t\r\n\t        if (hasSymbolUnder) {\r\n\t          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\r\n\t          shift();\r\n\t        }\r\n\t      })();\r\n\t\r\n\t      this.right_symbol.isPositioned = true;\r\n\t\r\n\t      this.right_symbol.render();\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\tCondition.prototype.renderLines = function() {\r\n\t  if (this.yes_symbol) {\r\n\t    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\r\n\t  }\r\n\t\r\n\t  if (this.no_symbol) {\r\n\t    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\r\n\t  }\r\n\t};\r\n\t\r\n\tmodule.exports = Condition;\r\n\n\n/***/ }),\n/* 6 */\n/*!********************************!*\\\n  !*** ./src/flowchart.chart.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Raphael = __webpack_require__(/*! raphael */ 15);\r\n\tvar defaults = __webpack_require__(/*! ./flowchart.helpers */ 1).defaults;\r\n\tvar defaultOptions = __webpack_require__(/*! ./flowchart.defaults */ 7);\r\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\r\n\t\r\n\tfunction FlowChart(container, options) {\r\n\t  options = options || {};\r\n\t\r\n\t  this.paper = new Raphael(container);\r\n\t\r\n\t  this.options = defaults(options, defaultOptions);\r\n\t\r\n\t  this.symbols = [];\r\n\t  this.lines = [];\r\n\t  this.start = null;\r\n\t}\r\n\t\r\n\tFlowChart.prototype.handle = function(symbol) {\r\n\t  if (this.symbols.indexOf(symbol) <= -1) {\r\n\t    this.symbols.push(symbol);\r\n\t  }\r\n\t\r\n\t  var flowChart = this;\r\n\t\r\n\t  if (symbol instanceof(Condition)) {\r\n\t    symbol.yes = function(nextSymbol) {\r\n\t      symbol.yes_symbol = nextSymbol;\r\n\t      if(symbol.no_symbol) {\r\n\t        symbol.pathOk = true;\r\n\t      }\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t    symbol.no = function(nextSymbol) {\r\n\t      symbol.no_symbol = nextSymbol;\r\n\t      if(symbol.yes_symbol) {\r\n\t        symbol.pathOk = true;\r\n\t      }\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t  } else {\r\n\t    symbol.then = function(nextSymbol) {\r\n\t      symbol.next = nextSymbol;\r\n\t      symbol.pathOk = true;\r\n\t      return flowChart.handle(nextSymbol);\r\n\t    };\r\n\t  }\r\n\t\r\n\t  return symbol;\r\n\t};\r\n\t\r\n\tFlowChart.prototype.startWith = function(symbol) {\r\n\t  this.start = symbol;\r\n\t  return this.handle(symbol);\r\n\t};\r\n\t\r\n\tFlowChart.prototype.render = function() {\r\n\t  var maxWidth = 0,\r\n\t      maxHeight = 0,\r\n\t      i = 0,\r\n\t      len = 0,\r\n\t      maxX = 0,\r\n\t      maxY = 0,\r\n\t      minX = 0,\r\n\t      minY = 0,\r\n\t      symbol,\r\n\t      line;\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    if (symbol.width > maxWidth) {\r\n\t      maxWidth = symbol.width;\r\n\t    }\r\n\t    if (symbol.height > maxHeight) {\r\n\t      maxHeight = symbol.height;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\r\n\t    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\r\n\t  }\r\n\t\r\n\t  this.start.render();\r\n\t  // for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t  //   symbol = this.symbols[i];\r\n\t  //   symbol.render();\r\n\t  // }\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    symbol.renderLines();\r\n\t  }\r\n\t\r\n\t  maxX = this.maxXFromLine;\r\n\t\r\n\t  var x;\r\n\t  var y;\r\n\t\r\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n\t    symbol = this.symbols[i];\r\n\t    x = symbol.getX() + symbol.width;\r\n\t    y = symbol.getY() + symbol.height;\r\n\t    if (x > maxX) {\r\n\t      maxX = x;\r\n\t    }\r\n\t    if (y > maxY) {\r\n\t      maxY = y;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  for (i = 0, len = this.lines.length; i < len; i++) {\r\n\t    line = this.lines[i].getBBox();\r\n\t    x = line.x;\r\n\t    y = line.y;\r\n\t    var x2 = line.x2;\r\n\t    var y2 = line.y2;\r\n\t    if (x < minX) {\r\n\t      minX = x;\r\n\t    }\r\n\t    if (y < minY) {\r\n\t      minY = y;\r\n\t    }\r\n\t    if (x2 > maxX) {\r\n\t      maxX = x2;\r\n\t    }\r\n\t    if (y2 > maxY) {\r\n\t      maxY = y2;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  var scale = this.options['scale'];\r\n\t  var lineWidth = this.options['line-width'];\r\n\t\r\n\t  if (minX < 0) minX -= lineWidth;\r\n\t  if (minY < 0) minY -= lineWidth;\r\n\t\r\n\t  var width = maxX + lineWidth - minX;\r\n\t  var height = maxY + lineWidth - minY;\r\n\t\r\n\t  this.paper.setSize(width * scale, height * scale);\r\n\t  this.paper.setViewBox(minX, minY, width, height, true);\r\n\t};\r\n\t\r\n\tFlowChart.prototype.clean = function() {\r\n\t  if (this.paper) {\r\n\t    var paperDom = this.paper.canvas;\r\n\t    paperDom.parentNode.removeChild(paperDom);\r\n\t  }\r\n\t};\r\n\t\r\n\tmodule.exports = FlowChart;\r\n\n\n/***/ }),\n/* 7 */\n/*!***********************************!*\\\n  !*** ./src/flowchart.defaults.js ***!\n  \\***********************************/\n/***/ (function(module, exports) {\n\n\t// defaults\r\n\tmodule.exports = {\r\n\t  'x': 0,\r\n\t  'y': 0,\r\n\t  'line-width': 3,\r\n\t  'line-length': 50,\r\n\t  'text-margin': 10,\r\n\t  'font-size': 14,\r\n\t  'font-color': 'black',\r\n\t  // 'font': 'normal',\r\n\t  // 'font-family': 'calibri',\r\n\t  // 'font-weight': 'normal',\r\n\t  'line-color': 'black',\r\n\t  'element-color': 'black',\r\n\t  'fill': 'white',\r\n\t  'yes-text': 'yes',\r\n\t  'no-text': 'no',\r\n\t  'arrow-end': 'block',\r\n\t  'class': 'flowchart',\r\n\t  'scale': 1,\r\n\t  'symbols': {\r\n\t    'start': {},\r\n\t    'end': {},\r\n\t    'condition': {},\r\n\t    'inputoutput': {},\r\n\t    'operation': {},\r\n\t    'subroutine': {}\r\n\t  }//,\r\n\t  // 'flowstate' : {\r\n\t  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\r\n\t  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\r\n\t  //   'future' : { 'fill': '#FFFF99'},\r\n\t  //   'invalid': {'fill': '#444444'}\r\n\t  // }\r\n\t};\r\n\n\n/***/ }),\n/* 8 */\n/*!*******************************!*\\\n  !*** ./src/flowchart.shim.js ***!\n  \\*******************************/\n/***/ (function(module, exports) {\n\n\t// add indexOf to non ECMA-262 standard compliant browsers\r\n\tif (!Array.prototype.indexOf) {\r\n\t  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\r\n\t    \"use strict\";\r\n\t    if (this === null) {\r\n\t      throw new TypeError();\r\n\t    }\r\n\t    var t = Object(this);\r\n\t    var len = t.length >>> 0;\r\n\t    if (len === 0) {\r\n\t      return -1;\r\n\t    }\r\n\t    var n = 0;\r\n\t    if (arguments.length > 0) {\r\n\t      n = Number(arguments[1]);\r\n\t      if (n != n) { // shortcut for verifying if it's NaN\r\n\t        n = 0;\r\n\t      } else if (n !== 0 && n != Infinity && n != -Infinity) {\r\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n\t      }\r\n\t    }\r\n\t    if (n >= len) {\r\n\t      return -1;\r\n\t    }\r\n\t    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\r\n\t    for (; k < len; k++) {\r\n\t      if (k in t && t[k] === searchElement) {\r\n\t        return k;\r\n\t      }\r\n\t    }\r\n\t    return -1;\r\n\t  };\r\n\t}\r\n\t\r\n\t// add lastIndexOf to non ECMA-262 standard compliant browsers\r\n\tif (!Array.prototype.lastIndexOf) {\r\n\t  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\r\n\t    \"use strict\";\r\n\t    if (this === null) {\r\n\t      throw new TypeError();\r\n\t    }\r\n\t    var t = Object(this);\r\n\t    var len = t.length >>> 0;\r\n\t    if (len === 0) {\r\n\t      return -1;\r\n\t    }\r\n\t    var n = len;\r\n\t    if (arguments.length > 1) {\r\n\t      n = Number(arguments[1]);\r\n\t      if (n != n) {\r\n\t        n = 0;\r\n\t      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\r\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n\t      }\r\n\t    }\r\n\t    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\r\n\t    for (; k >= 0; k--) {\r\n\t      if (k in t && t[k] === searchElement) {\r\n\t        return k;\r\n\t      }\r\n\t    }\r\n\t    return -1;\r\n\t  };\r\n\t}\r\n\t\r\n\tif (!String.prototype.trim) {\r\n\t  String.prototype.trim = function() {\r\n\t    return this.replace(/^\\s+|\\s+$/g, '');\r\n\t  };\r\n\t}\n\n/***/ }),\n/* 9 */\n/*!*************************************!*\\\n  !*** ./src/flowchart.symbol.end.js ***!\n  \\*************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction End(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\r\n\t  options = options || {};\r\n\t  options.text = options.text || 'End';\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t}\r\n\tinherits(End, Symbol);\r\n\t\r\n\tmodule.exports = End;\r\n\n\n/***/ }),\n/* 10 */\n/*!*********************************************!*\\\n  !*** ./src/flowchart.symbol.inputoutput.js ***!\n  \\*********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\r\n\tvar drawPath = drawAPI.drawPath;\r\n\t\r\n\tfunction InputOutput(chart, options) {\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options);\r\n\t  this.textMargin = this.getAttr('text-margin');\r\n\t\r\n\t  this.text.attr({\r\n\t    x: this.textMargin * 3\r\n\t  });\r\n\t\r\n\t  var width = this.text.getBBox().width + 4 * this.textMargin;\r\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\r\n\t  var startX = this.textMargin;\r\n\t  var startY = height/2;\r\n\t\r\n\t  var start = {x: startX, y: startY};\r\n\t  var points = [\r\n\t    {x: startX - this.textMargin, y: height},\r\n\t    {x: startX - this.textMargin + width, y: height},\r\n\t    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\r\n\t    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\r\n\t    {x: startX, y: startY}\r\n\t  ];\r\n\t\r\n\t  var symbol = drawPath(chart, start, points);\r\n\t\r\n\t  symbol.attr({\r\n\t    stroke: this.getAttr('element-color'),\r\n\t    'stroke-width': this.getAttr('line-width'),\r\n\t    fill: this.getAttr('fill')\r\n\t  });\r\n\t  if (options.link) { symbol.attr('href', options.link); }\r\n\t  if (options.target) { symbol.attr('target', options.target); }\r\n\t  if (options.key) { symbol.node.id = options.key; }\r\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\t\r\n\t  this.text.attr({\r\n\t    y: symbol.getBBox().height/2\r\n\t  });\r\n\t\r\n\t  this.group.push(symbol);\r\n\t  symbol.insertBefore(this.text);\r\n\t\r\n\t  this.initialize();\r\n\t}\r\n\tinherits(InputOutput, Symbol);\r\n\t\r\n\tInputOutput.prototype.getLeft = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX() + this.textMargin;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tInputOutput.prototype.getRight = function() {\r\n\t  var y = this.getY() + this.group.getBBox().height/2;\r\n\t  var x = this.getX() + this.group.getBBox().width - this.textMargin;\r\n\t  return {x: x, y: y};\r\n\t};\r\n\t\r\n\tmodule.exports = InputOutput;\r\n\n\n/***/ }),\n/* 11 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.operation.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction Operation(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t}\r\n\tinherits(Operation, Symbol);\r\n\t\r\n\tmodule.exports = Operation;\r\n\n\n/***/ }),\n/* 12 */\n/*!***************************************!*\\\n  !*** ./src/flowchart.symbol.start.js ***!\n  \\***************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction Start(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\r\n\t  options = options || {};\r\n\t  options.text = options.text || 'Start';\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t}\r\n\tinherits(Start, Symbol);\r\n\t\r\n\tmodule.exports = Start;\r\n\t\r\n\t// Start.prototype.render = function() {\r\n\t//   if (this.next) {\r\n\t//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\r\n\t\r\n\t//     var bottomPoint = this.getBottom();\r\n\t//     var topPoint = this.next.getTop();\r\n\t\r\n\t//     if (!this.next.isPositioned) {\r\n\t//       this.next.shiftY(this.getY() + this.height + lineLength);\r\n\t//       this.next.setX(bottomPoint.x - this.next.width/2);\r\n\t//       this.next.isPositioned = true;\r\n\t\r\n\t//       this.next.render();\r\n\t//     }\r\n\t//   }\r\n\t// };\r\n\t\r\n\t// Start.prototype.renderLines = function() {\r\n\t//   if (this.next) {\r\n\t//     this.drawLineTo(this.next);\r\n\t//   }\r\n\t// };\r\n\n\n/***/ }),\n/* 13 */\n/*!********************************************!*\\\n  !*** ./src/flowchart.symbol.subroutine.js ***!\n  \\********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\r\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\r\n\t\r\n\tfunction Subroutine(chart, options) {\r\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n\t  options = options || {};\r\n\t  Symbol.call(this, chart, options, symbol);\r\n\t\r\n\t  symbol.attr({\r\n\t    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\r\n\t  });\r\n\t\r\n\t  this.text.attr({\r\n\t    'x': 2 * this.getAttr('text-margin')\r\n\t  });\r\n\t\r\n\t  var innerWrap = chart.paper.rect(0, 0, 0, 0);\r\n\t  innerWrap.attr({\r\n\t    x: this.getAttr('text-margin'),\r\n\t    stroke: this.getAttr('element-color'),\r\n\t    'stroke-width': this.getAttr('line-width'),\r\n\t    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\r\n\t    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\r\n\t    fill: this.getAttr('fill')\r\n\t  });\r\n\t  if (options.key) { innerWrap.node.id = options.key + 'i'; }\r\n\t\r\n\t  var font = this.getAttr('font');\r\n\t  var fontF = this.getAttr('font-family');\r\n\t  var fontW = this.getAttr('font-weight');\r\n\t\r\n\t  if (font) innerWrap.attr({ 'font': font });\r\n\t  if (fontF) innerWrap.attr({ 'font-family': fontF });\r\n\t  if (fontW) innerWrap.attr({ 'font-weight': fontW });\r\n\t\r\n\t  if (options.link) { innerWrap.attr('href', options.link); }\r\n\t  if (options.target) { innerWrap.attr('target', options.target); }\r\n\t  this.group.push(innerWrap);\r\n\t  innerWrap.insertBefore(this.text);\r\n\t\r\n\t  this.initialize();\r\n\t}\r\n\tinherits(Subroutine, Symbol);\r\n\t\r\n\tmodule.exports = Subroutine;\r\n\n\n/***/ }),\n/* 14 */\n/*!******************************!*\\\n  !*** ./src/jquery-plugin.js ***!\n  \\******************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tif (typeof jQuery != 'undefined') {\r\n\t\tvar parse = __webpack_require__(/*! ./flowchart.parse */ 4);\r\n\t\t(function( $ ) {\r\n\t\t\t$.fn.flowChart = function( options ) {\r\n\t\t\t\treturn this.each(function() {\r\n\t\t\t\t\tvar $this = $(this);\r\n\t\t\t\t\tvar chart = parse($this.text());\r\n\t\t\t\t\t$this.html('');\r\n\t\t\t\t\tchart.drawSVG(this, options);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t})(jQuery); // eslint-disable-line\r\n\t}\r\n\n\n/***/ }),\n/* 15 */\n/*!**************************!*\\\n  !*** external \"Raphael\" ***!\n  \\**************************/\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// flowchart.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 97538c8d25efef615c99","require('./src/flowchart.shim');\r\nvar parse = require('./src/flowchart.parse');\r\nrequire('./src/jquery-plugin');\r\n\r\nvar FlowChart = {\r\n\tparse: parse\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n\twindow.flowchart = FlowChart;\r\n}\r\n\r\nmodule.exports = FlowChart;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 0\n// module chunks = 0","function _defaults(options, defaultOptions) {\r\n  if (!options || typeof options === 'function') {\r\n    return defaultOptions;\r\n  }\r\n\r\n  var merged = {};\r\n  for (var attrname in defaultOptions) {\r\n    merged[attrname] = defaultOptions[attrname];\r\n  }\r\n\r\n  for (attrname in options) {\r\n    if (options[attrname]) {\r\n      if (typeof merged[attrname] === 'object') {\r\n        merged[attrname] = _defaults(merged[attrname], options[attrname]);\r\n      } else {\r\n        merged[attrname] = options[attrname];\r\n      }\r\n    }\r\n  }\r\n  return merged;\r\n}\r\n\r\nfunction _inherits(ctor, superCtor) {\r\n  if (typeof(Object.create) === 'function') {\r\n    // implementation from standard node.js 'util' module\r\n    ctor.super_ = superCtor;\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  } else {\r\n    // old school shim for old browsers\r\n    ctor.super_ = superCtor;\r\n    var TempCtor = function () {};\r\n    TempCtor.prototype = superCtor.prototype;\r\n    ctor.prototype = new TempCtor();\r\n    ctor.prototype.constructor = ctor;\r\n  }\r\n}\r\n\r\n// move dependent functions to a container so that\r\n// they can be overriden easier in no jquery environment (node.js)\r\nmodule.exports = {\r\n  defaults: _defaults,\r\n  inherits: _inherits\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.helpers.js\n// module id = 1\n// module chunks = 0","var drawAPI = require('./flowchart.functions');\r\nvar drawLine = drawAPI.drawLine;\r\nvar checkLineIntersection = drawAPI.checkLineIntersection;\r\n\r\nfunction Symbol(chart, options, symbol) {\r\n  this.chart = chart;\r\n  this.group = this.chart.paper.set();\r\n  this.symbol = symbol;\r\n  this.connectedTo = [];\r\n  this.symbolType = options.symbolType;\r\n  this.flowstate = (options.flowstate || 'future');\r\n  this.lineStyle = (options.lineStyle || {});\r\n  this.key = (options.key || '');\r\n\r\n  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\r\n\r\n  this.text = this.chart.paper.text(0, 0, options.text);\r\n  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\r\n  if (options.key) { this.text.node.id = options.key + 't'; }\r\n  this.text.node.setAttribute('class', this.getAttr('class') + 't');\r\n\r\n  this.text.attr({\r\n    'text-anchor': 'start',\r\n    'x'          : this.getAttr('text-margin'),\r\n    'fill'       : this.getAttr('font-color'),\r\n    'font-size'  : this.getAttr('font-size')\r\n  });\r\n\r\n  var font  = this.getAttr('font');\r\n  var fontF = this.getAttr('font-family');\r\n  var fontW = this.getAttr('font-weight');\r\n  this.roleText = this.getAttr('role');\r\n\r\n  if (font) this.text.attr({ 'font': font });\r\n  if (fontF) this.text.attr({ 'font-family': fontF });\r\n  if (fontW) this.text.attr({ 'font-weight': fontW });\r\n\r\n  if (options.link) { this.text.attr('href', options.link); }\r\n  if (options.target) { this.text.attr('target', options.target); }\r\n\r\n  var maxWidth = this.getAttr('maxWidth');\r\n  if (maxWidth) {\r\n    // using this approach: http://stackoverflow.com/a/3153457/22466\r\n    var words = options.text.split(' ');\r\n    var tempText = \"\";\r\n    for (var i=0, ii=words.length; i<ii; i++) {\r\n      var word = words[i];\r\n      this.text.attr(\"text\", tempText + \" \" + word);\r\n      if (this.text.getBBox().width > maxWidth) {\r\n        tempText += \"\\n\" + word;\r\n      } else {\r\n        tempText += \" \" + word;\r\n      }\r\n    }\r\n    this.text.attr(\"text\", tempText.substring(1));\r\n  }\r\n\r\n  this.group.push(this.text);\r\n  \r\n\r\n  if (symbol) {\r\n    var tmpMargin = this.getAttr('text-margin');\r\n\r\n    symbol.attr({\r\n      'fill' : this.getAttr('fill'),\r\n      'stroke' : this.getAttr('element-color'),\r\n      'stroke-width' : this.getAttr('line-width'),\r\n      'width' : this.text.getBBox().width + 3 * tmpMargin,\r\n      'height' : this.text.getBBox().height + 3 * tmpMargin\r\n    });\r\n\r\n    symbol.node.setAttribute('class', this.getAttr('class'));\r\n\r\n    if (options.link) { symbol.attr('href', options.link); }\r\n    if (options.target) { symbol.attr('target', options.target); }\r\n    if (options.key) { symbol.node.id = options.key; }\r\n\r\n    this.group.push(symbol);\r\n    symbol.insertBefore(this.text);\r\n    \r\n    \r\n    this.text.attr({\r\n      'y': symbol.getBBox().height/2 + 3\r\n    });\r\n\r\n    if( this.roleText ){\r\n      this.circle = this.chart.paper.circle(symbol.getBBox().width - 20, 5, 10)\r\n        .attr({stroke: this.roleText.stroke, fill: this.roleText.fill,  \"fill-opacity\": this.roleText.opacity || 1});\r\n      this.circle.insertBefore(this.text);\r\n      symbol.insertBefore(this.circle);\r\n      this.group.push(this.circle);\r\n    }\r\n\r\n    this.initialize();\r\n  }\r\n\r\n}\r\n\r\n/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\r\nSymbol.prototype.getAttr = function(attName) {\r\n  if (!this.chart) {\r\n    return undefined;\r\n  }\r\n  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\r\n  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\r\n  var opt1;\r\n  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\r\n    opt1 = this.chart.options.flowstate[this.flowstate][attName];\r\n  }\r\n  return (opt1 || opt2 || opt3);\r\n};\r\n\r\nSymbol.prototype.initialize = function() {\r\n  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\r\n\r\n  this.width = this.group.getBBox().width;\r\n  this.height = this.group.getBBox().height;\r\n};\r\n\r\nSymbol.prototype.getCenter = function() {\r\n  var x = 0;\r\n  if( this.roleText )\r\n    x = 5;\r\n  return {x: this.getX() + this.width/2,\r\n          y: (this.getY() + this.height/2 + 5)};\r\n};\r\n\r\nSymbol.prototype.getX = function() {\r\n  return this.group.getBBox().x;\r\n};\r\n\r\nSymbol.prototype.getY = function() {\r\n  var x = 0;\r\n  if(this.roleText)\r\n    x = 5;\r\n  return this.group.getBBox().y + x;\r\n};\r\n\r\nSymbol.prototype.shiftX = function(x) {\r\n  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\r\n};\r\n\r\nSymbol.prototype.setX = function(x) {\r\n  this.group.transform('t' + x + ',' + this.getY());\r\n};\r\n\r\nSymbol.prototype.shiftY = function(y) {\r\n  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\r\n};\r\n\r\nSymbol.prototype.setY = function(y) {\r\n  this.group.transform('t' + this.getX() + ',' + y);\r\n};\r\n\r\nSymbol.prototype.getTop = function() {\r\n  var y = this.getY();\r\n  var x = this.getX() + this.width/2;\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.getBottom = function() {\r\n  var y = this.getY() + this.height;\r\n  var x = this.getX() + this.width/2;\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.getLeft = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX();\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.getRight = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX() + this.group.getBBox().width;\r\n  return {x: x, y: y};\r\n};\r\n\r\nSymbol.prototype.render = function() {\r\n  if (this.next) {\r\n\r\n    var lineLength = this.getAttr('line-length');\r\n\r\n    if (this.next_direction === 'right') {\r\n\r\n      var rightPoint = this.getRight();\r\n\r\n      if (!this.next.isPositioned) {\r\n\r\n        this.next.setY(rightPoint.y - this.next.height/2);\r\n        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\r\n        var self = this;\r\n        (function shift() {\r\n          var hasSymbolUnder = false;\r\n          var symb;\r\n          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n            symb = self.chart.symbols[i];\r\n\r\n            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\r\n            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\r\n              hasSymbolUnder = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (hasSymbolUnder) {\r\n            self.next.setX(symb.getX() + symb.width + lineLength);\r\n            shift();\r\n          }\r\n        })();\r\n\r\n        this.next.isPositioned = true;\r\n\r\n        this.next.render();\r\n      }\r\n    } else {\r\n      var bottomPoint = this.getBottom();\r\n\r\n      if (!this.next.isPositioned) {\r\n        this.next.shiftY(this.getY() + this.height + lineLength);\r\n        this.next.setX(bottomPoint.x - this.next.width/2);\r\n        this.next.isPositioned = true;\r\n\r\n        this.next.render();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nSymbol.prototype.renderLines = function() {\r\n  if (this.next) {\r\n    if (this.next_direction) {\r\n      this.drawLineTo(this.next, '', this.next_direction);\r\n    } else {\r\n      this.drawLineTo(this.next);\r\n    }\r\n  }\r\n};\r\n\r\nSymbol.prototype.drawLineTo = function(symbol, text, origin) {\r\n  if (this.connectedTo.indexOf(symbol) < 0) {\r\n    this.connectedTo.push(symbol);\r\n  }\r\n\r\n  var x = this.getCenter().x,\r\n      y = this.getCenter().y,\r\n      right = this.getRight(),\r\n      bottom = this.getBottom(),\r\n      left = this.getLeft();\r\n\r\n  var symbolX = symbol.getCenter().x,\r\n      symbolY = symbol.getCenter().y,\r\n      symbolTop = symbol.getTop(),\r\n      symbolRight = symbol.getRight(),\r\n      symbolLeft = symbol.getLeft();\r\n\r\n  var isOnSameColumn = x === symbolX,\r\n      isOnSameLine = y === symbolY,\r\n      isUnder = y < symbolY,\r\n      isUpper = y > symbolY || this === symbol,\r\n      isLeft = x > symbolX,\r\n      isRight = x < symbolX;\r\n\r\n  var maxX = 0,\r\n      line,\r\n      lineLength = this.getAttr('line-length'),\r\n      lineWith = this.getAttr('line-width');\r\n\r\n  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\r\n    line = drawLine(this.chart, bottom, symbolTop, text);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x;\r\n  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\r\n    line = drawLine(this.chart, right, symbolLeft, text);\r\n    this.rightStart = true;\r\n    symbol.leftEnd = true;\r\n    maxX = symbolLeft.x;\r\n  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\r\n    line = drawLine(this.chart, left, symbolRight, text);\r\n    this.leftStart = true;\r\n    symbol.rightEnd = true;\r\n    maxX = symbolRight.x;\r\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\r\n    line = drawLine(this.chart, right, [\r\n      {x: right.x + lineLength/2, y: right.y},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\r\n    line = drawLine(this.chart, right, [\r\n      {x: right.x + lineLength/2, y: right.y},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((!origin || origin === 'bottom') && isLeft) {\r\n    if (this.leftEnd && isUpper) {\r\n      line = drawLine(this.chart, bottom, [\r\n        {x: bottom.x, y: bottom.y + lineLength/2},\r\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\r\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\r\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n        {x: symbolTop.x, y: symbolTop.y}\r\n      ], text);\r\n    } else {\r\n      line = drawLine(this.chart, bottom, [\r\n        {x: bottom.x, y: symbolTop.y - lineLength/2},\r\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n        {x: symbolTop.x, y: symbolTop.y}\r\n      ], text);\r\n    }\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n  } else if ((!origin || origin === 'bottom') && isRight) {\r\n    line = drawLine(this.chart, bottom, [\r\n      {x: bottom.x, y: bottom.y + lineLength/2},\r\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\r\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\r\n  } else if ((origin && origin === 'right') && isLeft) {\r\n    line = drawLine(this.chart, right, [\r\n      {x: right.x + lineLength/2, y: right.y},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((origin && origin === 'right') && isRight) {\r\n    line = drawLine(this.chart, right, [\r\n      {x: symbolTop.x, y: right.y},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.rightStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = right.x + lineLength/2;\r\n  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\r\n    line = drawLine(this.chart, bottom, [\r\n      {x: bottom.x, y: bottom.y + lineLength/2},\r\n      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\r\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.bottomStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = bottom.x + lineLength/2;\r\n  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\r\n    var diffX = left.x - lineLength/2;\r\n    if (symbolLeft.x < left.x) {\r\n      diffX = symbolLeft.x - lineLength/2;\r\n    }\r\n    line = drawLine(this.chart, left, [\r\n      {x: diffX, y: left.y},\r\n      {x: diffX, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.leftStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = left.x;\r\n  } else if ((origin === 'left')) {\r\n    line = drawLine(this.chart, left, [\r\n      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: left.y},\r\n      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\r\n      {x: symbolTop.x, y: symbolTop.y}\r\n    ], text);\r\n    this.leftStart = true;\r\n    symbol.topEnd = true;\r\n    maxX = left.x;\r\n  }\r\n\r\n  //update line style\r\n  if (this.lineStyle[symbol.key] && line){\r\n      line.attr( this.lineStyle[symbol.key]);\r\n  }\r\n\r\n  if (line) {\r\n    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\r\n      var otherLine = this.chart.lines[l];\r\n      var len;\r\n\r\n      var ePath = otherLine.attr('path'),\r\n          lPath = line.attr('path');\r\n\r\n      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\r\n        var newPath = [];\r\n        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\r\n        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\r\n\r\n        var line1_from_x = newPath[0][1];\r\n        var line1_from_y = newPath[0][2];\r\n        var line1_to_x = newPath[1][1];\r\n        var line1_to_y = newPath[1][2];\r\n\r\n        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\r\n          var newLinePath = [];\r\n          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\r\n          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\r\n\r\n          var line2_from_x = newLinePath[0][1];\r\n          var line2_from_y = newLinePath[0][2];\r\n          var line2_to_x = newLinePath[1][1];\r\n          var line2_to_y = newLinePath[1][2];\r\n\r\n          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\r\n          if (res.onLine1 && res.onLine2) {\r\n\r\n            var newSegment;\r\n            if (line2_from_y === line2_to_y) {\r\n              if (line2_from_x > line2_to_x) {\r\n                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              } else {\r\n                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              }\r\n            } else {\r\n              if (line2_from_y > line2_to_y) {\r\n                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              } else {\r\n                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\r\n                lPath.splice(lP + 1, 0, newSegment);\r\n                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\r\n                lPath.splice(lP + 2, 0, newSegment);\r\n                line.attr('path', lPath);\r\n              }\r\n            }\r\n\r\n            lP += 2;\r\n            len += 2;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.chart.lines.push(line);\r\n  }\r\n\r\n  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\r\n    this.chart.maxXFromLine = maxX;\r\n  }\r\n};\r\n\r\nmodule.exports = Symbol;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.js\n// module id = 2\n// module chunks = 0","function drawPath(chart, location, points) {\r\n  var i, len;\r\n  var path = 'M{0},{1}';\r\n  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\r\n    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n  }\r\n  var pathValues = [location.x, location.y];\r\n  for (i = 0, len = points.length; i < len; i++) {\r\n    pathValues.push(points[i].x);\r\n    pathValues.push(points[i].y);\r\n  }\r\n  var symbol = chart.paper.path(path, pathValues);\r\n  symbol.attr('stroke', chart.options['element-color']);\r\n  symbol.attr('stroke-width', chart.options['line-width']);\r\n\r\n  var font = chart.options.font;\r\n  var fontF = chart.options['font-family'];\r\n  var fontW = chart.options['font-weight'];\r\n\r\n  if (font) symbol.attr({ 'font': font });\r\n  if (fontF) symbol.attr({ 'font-family': fontF });\r\n  if (fontW) symbol.attr({ 'font-weight': fontW });\r\n\r\n  return symbol;\r\n}\r\n\r\nfunction drawLine(chart, from, to, text) {\r\n  var i, len;\r\n\r\n  if (Object.prototype.toString.call(to) !== '[object Array]') {\r\n    to = [to];\r\n  }\r\n\r\n  var path = 'M{0},{1}';\r\n  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\r\n    path += ' L{' + i + '},{' + (i + 1) + '}';\r\n  }\r\n  var pathValues = [from.x, from.y];\r\n  for (i = 0, len = to.length; i < len; i++) {\r\n    pathValues.push(to[i].x);\r\n    pathValues.push(to[i].y);\r\n  }\r\n\r\n  var line = chart.paper.path(path, pathValues);\r\n  line.attr({\r\n    stroke: chart.options['line-color'],\r\n    'stroke-width': chart.options['line-width'],\r\n    'arrow-end': chart.options['arrow-end']\r\n  });\r\n\r\n  var font = chart.options.font;\r\n  var fontF = chart.options['font-family'];\r\n  var fontW = chart.options['font-weight'];\r\n\r\n  if (font) line.attr({ 'font': font });\r\n  if (fontF) line.attr({ 'font-family': fontF });\r\n  if (fontW) line.attr({ 'font-weight': fontW });\r\n\r\n  if (text) {\r\n\r\n    var centerText = false;\r\n\r\n    var textPath = chart.paper.text(0, 0, text);\r\n\r\n    var isHorizontal = false;\r\n    var firstTo = to[0];\r\n\r\n    if (from.y === firstTo.y) {\r\n      isHorizontal = true;\r\n    }\r\n\r\n    var x = 0,\r\n        y = 0;\r\n\r\n    if (centerText) {\r\n      if (from.x > firstTo.x) {\r\n        x = from.x - (from.x - firstTo.x)/2;\r\n      } else {\r\n        x = firstTo.x - (firstTo.x - from.x)/2;\r\n      }\r\n\r\n      if (from.y > firstTo.y) {\r\n        y = from.y - (from.y - firstTo.y)/2;\r\n      } else {\r\n        y = firstTo.y - (firstTo.y - from.y)/2;\r\n      }\r\n\r\n      if (isHorizontal) {\r\n        x -= textPath.getBBox().width/2;\r\n        y -= chart.options['text-margin'];\r\n      } else {\r\n        x += chart.options['text-margin'];\r\n        y -= textPath.getBBox().height/2;\r\n      }\r\n    } else {\r\n      x = from.x;\r\n      y = from.y;\r\n\r\n      if (isHorizontal) {\r\n        x += chart.options['text-margin']/2;\r\n        y -= chart.options['text-margin'];\r\n      } else {\r\n        x += chart.options['text-margin']/2;\r\n        y += chart.options['text-margin'];\r\n      }\r\n    }\r\n\r\n    textPath.attr({\r\n      'text-anchor': 'start',\r\n      'font-size': chart.options['font-size'],\r\n      'fill': chart.options['font-color'],\r\n      x: x,\r\n      y: y\r\n    });\r\n\r\n    if (font) textPath.attr({ 'font': font });\r\n    if (fontF) textPath.attr({ 'font-family': fontF });\r\n    if (fontW) textPath.attr({ 'font-weight': fontW });\r\n  }\r\n\r\n  return line;\r\n}\r\n\r\nfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\r\n  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\r\n  var denominator, a, b, numerator1, numerator2, result = {\r\n    x: null,\r\n    y: null,\r\n    onLine1: false,\r\n    onLine2: false\r\n  };\r\n  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\r\n  if (denominator === 0) {\r\n    return result;\r\n  }\r\n  a = line1StartY - line2StartY;\r\n  b = line1StartX - line2StartX;\r\n  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\r\n  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\r\n  a = numerator1 / denominator;\r\n  b = numerator2 / denominator;\r\n\r\n  // if we cast these lines infinitely in both directions, they intersect here:\r\n  result.x = line1StartX + (a * (line1EndX - line1StartX));\r\n  result.y = line1StartY + (a * (line1EndY - line1StartY));\r\n  /*\r\n  // it is worth noting that this should be the same as:\r\n  x = line2StartX + (b * (line2EndX - line2StartX));\r\n  y = line2StartX + (b * (line2EndY - line2StartY));\r\n  */\r\n  // if line1 is a segment and line2 is infinite, they intersect if:\r\n  if (a > 0 && a < 1) {\r\n    result.onLine1 = true;\r\n  }\r\n  // if line2 is a segment and line1 is infinite, they intersect if:\r\n  if (b > 0 && b < 1) {\r\n    result.onLine2 = true;\r\n  }\r\n  // if line1 and line2 are segments, they intersect if both of the above are true\r\n  return result;\r\n}\r\n\r\nmodule.exports = {\r\n\tdrawPath: drawPath,\r\n\tdrawLine: drawLine,\r\n\tcheckLineIntersection: checkLineIntersection\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.functions.js\n// module id = 3\n// module chunks = 0","var FlowChart = require('./flowchart.chart');\r\nvar Start = require('./flowchart.symbol.start');\r\nvar End = require('./flowchart.symbol.end');\r\nvar Operation = require('./flowchart.symbol.operation');\r\nvar InputOutput = require('./flowchart.symbol.inputoutput');\r\nvar Subroutine = require('./flowchart.symbol.subroutine');\r\nvar Condition = require('./flowchart.symbol.condition');\r\n\r\nfunction parse(input) {\r\n  input = input || '';\r\n  input = input.trim();\r\n\r\n  var chart = {\r\n    symbols: {},\r\n    start: null,\r\n    drawSVG: function(container, options) {\r\n      var self = this;\r\n\r\n      if (this.diagram) {\r\n        this.diagram.clean();\r\n      }\r\n\r\n      var diagram = new FlowChart(container, options);\r\n      this.diagram = diagram;\r\n      var dispSymbols = {};\r\n\r\n      function getDisplaySymbol(s) {\r\n        if (dispSymbols[s.key]) {\r\n          return dispSymbols[s.key];\r\n        }\r\n\r\n        switch (s.symbolType) {\r\n          case 'start':\r\n            dispSymbols[s.key] = new Start(diagram, s);\r\n            break;\r\n          case 'end':\r\n            dispSymbols[s.key] = new End(diagram, s);\r\n            break;\r\n          case 'operation':\r\n            dispSymbols[s.key] = new Operation(diagram, s);\r\n            break;\r\n          case 'inputoutput':\r\n            dispSymbols[s.key] = new InputOutput(diagram, s);\r\n            break;\r\n          case 'subroutine':\r\n            dispSymbols[s.key] = new Subroutine(diagram, s);\r\n            break;\r\n          case 'condition':\r\n            dispSymbols[s.key] = new Condition(diagram, s);\r\n            break;\r\n          default:\r\n            return new Error('Wrong symbol type!');\r\n        }\r\n\r\n        return dispSymbols[s.key];\r\n      }\r\n\r\n      (function constructChart(s, prevDisp, prev) {\r\n        var dispSymb = getDisplaySymbol(s);\r\n\r\n        if (self.start === s) {\r\n          diagram.startWith(dispSymb);\r\n        } else if (prevDisp && prev && !prevDisp.pathOk) {\r\n          if (prevDisp instanceof(Condition)) {\r\n            if (prev.yes === s) {\r\n              prevDisp.yes(dispSymb);\r\n            }\r\n            if (prev.no === s) {\r\n              prevDisp.no(dispSymb);\r\n            }\r\n          } else {\r\n            prevDisp.then(dispSymb);\r\n          }\r\n        }\r\n\r\n        if (dispSymb.pathOk) {\r\n          return dispSymb;\r\n        }\r\n\r\n        if (dispSymb instanceof(Condition)) {\r\n          if (s.yes) {\r\n            constructChart(s.yes, dispSymb, s);\r\n          }\r\n          if (s.no) {\r\n            constructChart(s.no, dispSymb, s);\r\n          }\r\n        } else if (s.next) {\r\n          constructChart(s.next, dispSymb, s);\r\n        }\r\n\r\n        return dispSymb;\r\n      })(this.start);\r\n\r\n      diagram.render();\r\n    },\r\n    clean: function() {\r\n      this.diagram.clean();\r\n    }\r\n  };\r\n\r\n  var lines = [];\r\n  var prevBreak = 0;\r\n  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\r\n    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\r\n      var line0 = input.substring(prevBreak, i0);\r\n      prevBreak = i0 + 1;\r\n      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\r\n    }\r\n  }\r\n\r\n  if(prevBreak < input.length) {\r\n    lines.push(input.substr(prevBreak));\r\n  }\r\n\r\n  for (var l = 1, len = lines.length; l < len;) {\r\n    var currentLine = lines[l];\r\n\r\n    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\r\n      lines[l - 1] += '\\n' + currentLine;\r\n      lines.splice(l, 1);\r\n      len--;\r\n    } else {\r\n      l++;\r\n    }\r\n  }\r\n\r\n  function getStyle(s){\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      return s.substring(startIndex,endIndex);\r\n    }\r\n    return '{}';\r\n  }\r\n\r\n  function getSymbol(s) {\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      return chart.symbols[s.substring(0, startIndex - 1)];\r\n    }\r\n    return chart.symbols[s];\r\n  }\r\n\r\n  function getNextPath(s) {\r\n    var next = 'next';\r\n    var startIndex = s.indexOf('(') + 1;\r\n    var endIndex = s.indexOf(')');\r\n    if (startIndex >= 0 && endIndex >= 0) {\r\n      next = flowSymb.substring(startIndex, endIndex);\r\n      if (next.indexOf(',') < 0) {\r\n        if (next !== 'yes' && next !== 'no') {\r\n          next = 'next, ' + next;\r\n        }\r\n      }\r\n    }\r\n    return next;\r\n  }\r\n\r\n  while (lines.length > 0) {\r\n    var line = lines.splice(0, 1)[0].trim();\r\n\r\n    if (line.indexOf('=>') >= 0) {\r\n      // definition\r\n      var parts = line.split('=>');\r\n      var symbol = {\r\n        key: parts[0].replace(/\\(.*\\)/, ''),\r\n        symbolType: parts[1],\r\n        text: null,\r\n        link: null,\r\n        target: null,\r\n        flowstate: null,\r\n        lineStyle: {},\r\n        params: {}\r\n      };\r\n\r\n      //parse parameters\r\n      var params = parts[0].match(/\\((.*)\\)/);\r\n      if (params && params.length > 1){\r\n        var entries = params[1].split(',');\r\n        for(var i = 0; i < entries.length; i++) {\r\n          var entry = entries[0].split('=');\r\n          if (entry.length == 2){\r\n            symbol.params[entry[0]] = entry[1];\r\n          }\r\n        }\r\n      }\r\n\r\n      var sub;\r\n\r\n      if (symbol.symbolType.indexOf(': ') >= 0) {\r\n        sub = symbol.symbolType.split(': ');\r\n        symbol.symbolType = sub.shift();\r\n        symbol.text = sub.join(': ');\r\n      }\r\n\r\n      if (symbol.text && symbol.text.indexOf(':>') >= 0) {\r\n        sub = symbol.text.split(':>');\r\n        symbol.text = sub.shift();\r\n        symbol.link = sub.join(':>');\r\n      } else if (symbol.symbolType.indexOf(':>') >= 0) {\r\n        sub = symbol.symbolType.split(':>');\r\n        symbol.symbolType = sub.shift();\r\n        symbol.link = sub.join(':>');\r\n      }\r\n\r\n      if (symbol.symbolType.indexOf('\\n') >= 0) {\r\n        symbol.symbolType = symbol.symbolType.split('\\n')[0];\r\n      }\r\n\r\n      /* adding support for links */\r\n      if (symbol.link) {\r\n        var startIndex = symbol.link.indexOf('[') + 1;\r\n        var endIndex = symbol.link.indexOf(']');\r\n        if (startIndex >= 0 && endIndex >= 0) {\r\n          symbol.target = symbol.link.substring(startIndex, endIndex);\r\n          symbol.link = symbol.link.substring(0, startIndex - 1);\r\n        }\r\n      }\r\n      /* end of link support */\r\n\r\n      /* adding support for flowstates */\r\n      if (symbol.text) {\r\n        if (symbol.text.indexOf('|') >= 0) {\r\n          var txtAndState = symbol.text.split('|');\r\n          symbol.flowstate = txtAndState.pop().trim();\r\n          symbol.text = txtAndState.join('|');\r\n        }\r\n      }\r\n      /* end of flowstate support */\r\n\r\n      chart.symbols[symbol.key] = symbol;\r\n\r\n    } else if (line.indexOf('->') >= 0) {\r\n      // flow\r\n      var flowSymbols = line.split('->');\r\n      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\r\n        var flowSymb = flowSymbols[i];\r\n\r\n        var realSymb = getSymbol(flowSymb);\r\n        var next = getNextPath(flowSymb);\r\n\r\n        var direction = null;\r\n        if (next.indexOf(',') >= 0) {\r\n          var condOpt = next.split(',');\r\n          next = condOpt[0];\r\n          direction = condOpt[1].trim();\r\n        }\r\n\r\n        if (!chart.start) {\r\n          chart.start = realSymb;\r\n        }\r\n\r\n        if (i + 1 < lenS) {\r\n          var nextSymb = flowSymbols[i + 1];\r\n          realSymb[next] = getSymbol(nextSymb);\r\n          realSymb['direction_' + next] = direction;\r\n          direction = null;\r\n        }\r\n      }\r\n    } else if (line.indexOf('@>') >= 0) {\r\n\r\n      // line style\r\n      var lineStyleSymbols = line.split('@>');\r\n      for (var i = 0, lenS = lineStyleSymbols.length; i < lenS; i++) {\r\n\r\n        if ((i+1) != lenS){\r\n          var curSymb = getSymbol(lineStyleSymbols[i]);\r\n          var nextSymb = getSymbol(lineStyleSymbols[i+1])\r\n\r\n          curSymb['lineStyle'][nextSymb.key] = JSON.parse(getStyle(lineStyleSymbols[i+1]));\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return chart;\r\n}\r\n\r\nmodule.exports = parse;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.parse.js\n// module id = 4\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\nvar drawAPI = require('./flowchart.functions');\r\nvar drawPath = drawAPI.drawPath;\r\n\r\nfunction Condition(chart, options) {\r\n  options = options || {};\r\n  Symbol.call(this, chart, options);\r\n  this.textMargin = this.getAttr('text-margin');\r\n  this.yes_direction = 'bottom';\r\n  this.no_direction = 'right';\r\n  this.params = options.params;\r\n  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\r\n    if (options.direction_yes === 'right') {\r\n      this.no_direction = 'bottom';\r\n      this.yes_direction = 'right';\r\n    } else {\r\n      this.no_direction = 'right';\r\n      this.yes_direction = 'bottom';\r\n    }\r\n  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\r\n    if (options.direction_no === 'right') {\r\n      this.yes_direction = 'bottom';\r\n      this.no_direction = 'right';\r\n    } else {\r\n      this.yes_direction = 'right';\r\n      this.no_direction = 'bottom';\r\n    }\r\n  } else {\r\n    this.yes_direction = 'bottom';\r\n    this.no_direction = 'right';\r\n  }\r\n\r\n  this.yes_direction = this.yes_direction || 'bottom';\r\n  this.no_direction = this.no_direction || 'right';\r\n\r\n  this.text.attr({\r\n    x: this.textMargin * 2\r\n  });\r\n\r\n  var width = this.text.getBBox().width + 3 * this.textMargin;\r\n  width += width/2;\r\n  var height = this.text.getBBox().height + 2 * this.textMargin;\r\n  height += height/2;\r\n  height = Math.max(width * 0.5, height);\r\n  var startX = width/4;\r\n  var startY = height/4;\r\n\r\n  this.text.attr({\r\n    x: startX + this.textMargin/2\r\n  });\r\n\r\n  var start = {x: startX, y: startY};\r\n  var points = [\r\n    {x: startX - width/4, y: startY + height/4},\r\n    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\r\n    {x: startX - width/4 + width, y: startY + height/4},\r\n    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\r\n    {x: startX - width/4, y: startY + height/4}\r\n  ];\r\n\r\n  var symbol = drawPath(chart, start, points);\r\n\r\n  symbol.attr({\r\n    stroke: this.getAttr('element-color'),\r\n    'stroke-width': this.getAttr('line-width'),\r\n    fill: this.getAttr('fill')\r\n  });\r\n  if (options.link) { symbol.attr('href', options.link); }\r\n  if (options.target) { symbol.attr('target', options.target); }\r\n  if (options.key) { symbol.node.id = options.key; }\r\n  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\r\n  this.text.attr({\r\n    y: symbol.getBBox().height/2\r\n  });\r\n\r\n  this.group.push(symbol);\r\n  symbol.insertBefore(this.text);\r\n\r\n  this.initialize();\r\n}\r\ninherits(Condition, Symbol);\r\n\r\nCondition.prototype.render = function() {\r\n\r\n  if (this.yes_direction) {\r\n    this[this.yes_direction + '_symbol'] = this.yes_symbol;\r\n  }\r\n\r\n  if (this.no_direction) {\r\n    this[this.no_direction + '_symbol'] = this.no_symbol;\r\n  }\r\n\r\n  var lineLength = this.getAttr('line-length');\r\n\r\n  if (this.bottom_symbol) {\r\n    var bottomPoint = this.getBottom();\r\n\r\n    if (!this.bottom_symbol.isPositioned) {\r\n      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\r\n      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\r\n      this.bottom_symbol.isPositioned = true;\r\n\r\n      this.bottom_symbol.render();\r\n    }\r\n  }\r\n\r\n  if (this.right_symbol) {\r\n    var rightPoint = this.getRight();\r\n\r\n    if (!this.right_symbol.isPositioned) {\r\n\r\n      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\r\n      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\r\n\r\n      var self = this;\r\n      (function shift() {\r\n        var hasSymbolUnder = false;\r\n        var symb;\r\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\r\n          symb = self.chart.symbols[i];\r\n\r\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \r\n            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\r\n            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\r\n              hasSymbolUnder = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (hasSymbolUnder) {\r\n          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\r\n          shift();\r\n        }\r\n      })();\r\n\r\n      this.right_symbol.isPositioned = true;\r\n\r\n      this.right_symbol.render();\r\n    }\r\n  }\r\n};\r\n\r\nCondition.prototype.renderLines = function() {\r\n  if (this.yes_symbol) {\r\n    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\r\n  }\r\n\r\n  if (this.no_symbol) {\r\n    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\r\n  }\r\n};\r\n\r\nmodule.exports = Condition;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.condition.js\n// module id = 5\n// module chunks = 0","var Raphael = require('raphael');\r\nvar defaults = require('./flowchart.helpers').defaults;\r\nvar defaultOptions = require('./flowchart.defaults');\r\nvar Condition = require('./flowchart.symbol.condition');\r\n\r\nfunction FlowChart(container, options) {\r\n  options = options || {};\r\n\r\n  this.paper = new Raphael(container);\r\n\r\n  this.options = defaults(options, defaultOptions);\r\n\r\n  this.symbols = [];\r\n  this.lines = [];\r\n  this.start = null;\r\n}\r\n\r\nFlowChart.prototype.handle = function(symbol) {\r\n  if (this.symbols.indexOf(symbol) <= -1) {\r\n    this.symbols.push(symbol);\r\n  }\r\n\r\n  var flowChart = this;\r\n\r\n  if (symbol instanceof(Condition)) {\r\n    symbol.yes = function(nextSymbol) {\r\n      symbol.yes_symbol = nextSymbol;\r\n      if(symbol.no_symbol) {\r\n        symbol.pathOk = true;\r\n      }\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n    symbol.no = function(nextSymbol) {\r\n      symbol.no_symbol = nextSymbol;\r\n      if(symbol.yes_symbol) {\r\n        symbol.pathOk = true;\r\n      }\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n  } else {\r\n    symbol.then = function(nextSymbol) {\r\n      symbol.next = nextSymbol;\r\n      symbol.pathOk = true;\r\n      return flowChart.handle(nextSymbol);\r\n    };\r\n  }\r\n\r\n  return symbol;\r\n};\r\n\r\nFlowChart.prototype.startWith = function(symbol) {\r\n  this.start = symbol;\r\n  return this.handle(symbol);\r\n};\r\n\r\nFlowChart.prototype.render = function() {\r\n  var maxWidth = 0,\r\n      maxHeight = 0,\r\n      i = 0,\r\n      len = 0,\r\n      maxX = 0,\r\n      maxY = 0,\r\n      minX = 0,\r\n      minY = 0,\r\n      symbol,\r\n      line;\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    if (symbol.width > maxWidth) {\r\n      maxWidth = symbol.width;\r\n    }\r\n    if (symbol.height > maxHeight) {\r\n      maxHeight = symbol.height;\r\n    }\r\n  }\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\r\n    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\r\n  }\r\n\r\n  this.start.render();\r\n  // for (i = 0, len = this.symbols.length; i < len; i++) {\r\n  //   symbol = this.symbols[i];\r\n  //   symbol.render();\r\n  // }\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    symbol.renderLines();\r\n  }\r\n\r\n  maxX = this.maxXFromLine;\r\n\r\n  var x;\r\n  var y;\r\n\r\n  for (i = 0, len = this.symbols.length; i < len; i++) {\r\n    symbol = this.symbols[i];\r\n    x = symbol.getX() + symbol.width;\r\n    y = symbol.getY() + symbol.height;\r\n    if (x > maxX) {\r\n      maxX = x;\r\n    }\r\n    if (y > maxY) {\r\n      maxY = y;\r\n    }\r\n  }\r\n\r\n  for (i = 0, len = this.lines.length; i < len; i++) {\r\n    line = this.lines[i].getBBox();\r\n    x = line.x;\r\n    y = line.y;\r\n    var x2 = line.x2;\r\n    var y2 = line.y2;\r\n    if (x < minX) {\r\n      minX = x;\r\n    }\r\n    if (y < minY) {\r\n      minY = y;\r\n    }\r\n    if (x2 > maxX) {\r\n      maxX = x2;\r\n    }\r\n    if (y2 > maxY) {\r\n      maxY = y2;\r\n    }\r\n  }\r\n\r\n  var scale = this.options['scale'];\r\n  var lineWidth = this.options['line-width'];\r\n\r\n  if (minX < 0) minX -= lineWidth;\r\n  if (minY < 0) minY -= lineWidth;\r\n\r\n  var width = maxX + lineWidth - minX;\r\n  var height = maxY + lineWidth - minY;\r\n\r\n  this.paper.setSize(width * scale, height * scale);\r\n  this.paper.setViewBox(minX, minY, width, height, true);\r\n};\r\n\r\nFlowChart.prototype.clean = function() {\r\n  if (this.paper) {\r\n    var paperDom = this.paper.canvas;\r\n    paperDom.parentNode.removeChild(paperDom);\r\n  }\r\n};\r\n\r\nmodule.exports = FlowChart;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.chart.js\n// module id = 6\n// module chunks = 0","// defaults\r\nmodule.exports = {\r\n  'x': 0,\r\n  'y': 0,\r\n  'line-width': 3,\r\n  'line-length': 50,\r\n  'text-margin': 10,\r\n  'font-size': 14,\r\n  'font-color': 'black',\r\n  // 'font': 'normal',\r\n  // 'font-family': 'calibri',\r\n  // 'font-weight': 'normal',\r\n  'line-color': 'black',\r\n  'element-color': 'black',\r\n  'fill': 'white',\r\n  'yes-text': 'yes',\r\n  'no-text': 'no',\r\n  'arrow-end': 'block',\r\n  'class': 'flowchart',\r\n  'scale': 1,\r\n  'symbols': {\r\n    'start': {},\r\n    'end': {},\r\n    'condition': {},\r\n    'inputoutput': {},\r\n    'operation': {},\r\n    'subroutine': {}\r\n  }//,\r\n  // 'flowstate' : {\r\n  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\r\n  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\r\n  //   'future' : { 'fill': '#FFFF99'},\r\n  //   'invalid': {'fill': '#444444'}\r\n  // }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.defaults.js\n// module id = 7\n// module chunks = 0","// add indexOf to non ECMA-262 standard compliant browsers\r\nif (!Array.prototype.indexOf) {\r\n  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\r\n    \"use strict\";\r\n    if (this === null) {\r\n      throw new TypeError();\r\n    }\r\n    var t = Object(this);\r\n    var len = t.length >>> 0;\r\n    if (len === 0) {\r\n      return -1;\r\n    }\r\n    var n = 0;\r\n    if (arguments.length > 0) {\r\n      n = Number(arguments[1]);\r\n      if (n != n) { // shortcut for verifying if it's NaN\r\n        n = 0;\r\n      } else if (n !== 0 && n != Infinity && n != -Infinity) {\r\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n      }\r\n    }\r\n    if (n >= len) {\r\n      return -1;\r\n    }\r\n    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\r\n    for (; k < len; k++) {\r\n      if (k in t && t[k] === searchElement) {\r\n        return k;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n}\r\n\r\n// add lastIndexOf to non ECMA-262 standard compliant browsers\r\nif (!Array.prototype.lastIndexOf) {\r\n  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\r\n    \"use strict\";\r\n    if (this === null) {\r\n      throw new TypeError();\r\n    }\r\n    var t = Object(this);\r\n    var len = t.length >>> 0;\r\n    if (len === 0) {\r\n      return -1;\r\n    }\r\n    var n = len;\r\n    if (arguments.length > 1) {\r\n      n = Number(arguments[1]);\r\n      if (n != n) {\r\n        n = 0;\r\n      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\r\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n      }\r\n    }\r\n    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\r\n    for (; k >= 0; k--) {\r\n      if (k in t && t[k] === searchElement) {\r\n        return k;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n}\r\n\r\nif (!String.prototype.trim) {\r\n  String.prototype.trim = function() {\r\n    return this.replace(/^\\s+|\\s+$/g, '');\r\n  };\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.shim.js\n// module id = 8\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction End(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\r\n  options = options || {};\r\n  options.text = options.text || 'End';\r\n  Symbol.call(this, chart, options, symbol);\r\n}\r\ninherits(End, Symbol);\r\n\r\nmodule.exports = End;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.end.js\n// module id = 9\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\nvar drawAPI = require('./flowchart.functions');\r\nvar drawPath = drawAPI.drawPath;\r\n\r\nfunction InputOutput(chart, options) {\r\n  options = options || {};\r\n  Symbol.call(this, chart, options);\r\n  this.textMargin = this.getAttr('text-margin');\r\n\r\n  this.text.attr({\r\n    x: this.textMargin * 3\r\n  });\r\n\r\n  var width = this.text.getBBox().width + 4 * this.textMargin;\r\n  var height = this.text.getBBox().height + 2 * this.textMargin;\r\n  var startX = this.textMargin;\r\n  var startY = height/2;\r\n\r\n  var start = {x: startX, y: startY};\r\n  var points = [\r\n    {x: startX - this.textMargin, y: height},\r\n    {x: startX - this.textMargin + width, y: height},\r\n    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\r\n    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\r\n    {x: startX, y: startY}\r\n  ];\r\n\r\n  var symbol = drawPath(chart, start, points);\r\n\r\n  symbol.attr({\r\n    stroke: this.getAttr('element-color'),\r\n    'stroke-width': this.getAttr('line-width'),\r\n    fill: this.getAttr('fill')\r\n  });\r\n  if (options.link) { symbol.attr('href', options.link); }\r\n  if (options.target) { symbol.attr('target', options.target); }\r\n  if (options.key) { symbol.node.id = options.key; }\r\n  symbol.node.setAttribute('class', this.getAttr('class'));\r\n\r\n  this.text.attr({\r\n    y: symbol.getBBox().height/2\r\n  });\r\n\r\n  this.group.push(symbol);\r\n  symbol.insertBefore(this.text);\r\n\r\n  this.initialize();\r\n}\r\ninherits(InputOutput, Symbol);\r\n\r\nInputOutput.prototype.getLeft = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX() + this.textMargin;\r\n  return {x: x, y: y};\r\n};\r\n\r\nInputOutput.prototype.getRight = function() {\r\n  var y = this.getY() + this.group.getBBox().height/2;\r\n  var x = this.getX() + this.group.getBBox().width - this.textMargin;\r\n  return {x: x, y: y};\r\n};\r\n\r\nmodule.exports = InputOutput;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.inputoutput.js\n// module id = 10\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction Operation(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n  options = options || {};\r\n  Symbol.call(this, chart, options, symbol);\r\n}\r\ninherits(Operation, Symbol);\r\n\r\nmodule.exports = Operation;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.operation.js\n// module id = 11\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction Start(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\r\n  options = options || {};\r\n  options.text = options.text || 'Start';\r\n  Symbol.call(this, chart, options, symbol);\r\n}\r\ninherits(Start, Symbol);\r\n\r\nmodule.exports = Start;\r\n\r\n// Start.prototype.render = function() {\r\n//   if (this.next) {\r\n//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\r\n\r\n//     var bottomPoint = this.getBottom();\r\n//     var topPoint = this.next.getTop();\r\n\r\n//     if (!this.next.isPositioned) {\r\n//       this.next.shiftY(this.getY() + this.height + lineLength);\r\n//       this.next.setX(bottomPoint.x - this.next.width/2);\r\n//       this.next.isPositioned = true;\r\n\r\n//       this.next.render();\r\n//     }\r\n//   }\r\n// };\r\n\r\n// Start.prototype.renderLines = function() {\r\n//   if (this.next) {\r\n//     this.drawLineTo(this.next);\r\n//   }\r\n// };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.start.js\n// module id = 12\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\r\nvar inherits = require('./flowchart.helpers').inherits;\r\n\r\nfunction Subroutine(chart, options) {\r\n  var symbol = chart.paper.rect(0, 0, 0, 0);\r\n  options = options || {};\r\n  Symbol.call(this, chart, options, symbol);\r\n\r\n  symbol.attr({\r\n    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\r\n  });\r\n\r\n  this.text.attr({\r\n    'x': 2 * this.getAttr('text-margin')\r\n  });\r\n\r\n  var innerWrap = chart.paper.rect(0, 0, 0, 0);\r\n  innerWrap.attr({\r\n    x: this.getAttr('text-margin'),\r\n    stroke: this.getAttr('element-color'),\r\n    'stroke-width': this.getAttr('line-width'),\r\n    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\r\n    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\r\n    fill: this.getAttr('fill')\r\n  });\r\n  if (options.key) { innerWrap.node.id = options.key + 'i'; }\r\n\r\n  var font = this.getAttr('font');\r\n  var fontF = this.getAttr('font-family');\r\n  var fontW = this.getAttr('font-weight');\r\n\r\n  if (font) innerWrap.attr({ 'font': font });\r\n  if (fontF) innerWrap.attr({ 'font-family': fontF });\r\n  if (fontW) innerWrap.attr({ 'font-weight': fontW });\r\n\r\n  if (options.link) { innerWrap.attr('href', options.link); }\r\n  if (options.target) { innerWrap.attr('target', options.target); }\r\n  this.group.push(innerWrap);\r\n  innerWrap.insertBefore(this.text);\r\n\r\n  this.initialize();\r\n}\r\ninherits(Subroutine, Symbol);\r\n\r\nmodule.exports = Subroutine;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.subroutine.js\n// module id = 13\n// module chunks = 0","if (typeof jQuery != 'undefined') {\r\n\tvar parse = require('./flowchart.parse');\r\n\t(function( $ ) {\r\n\t\t$.fn.flowChart = function( options ) {\r\n\t\t\treturn this.each(function() {\r\n\t\t\t\tvar $this = $(this);\r\n\t\t\t\tvar chart = parse($this.text());\r\n\t\t\t\t$this.html('');\r\n\t\t\t\tchart.drawSVG(this, options);\r\n\t\t\t});\r\n\t\t};\r\n\t})(jQuery); // eslint-disable-line\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/jquery-plugin.js\n// module id = 14\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Raphael\"\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}